
EVM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000106e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ec  00800060  0000106e  00001102  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  0080014c  0080014c  000011ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000124c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001288  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018f0  00000000  00000000  00001310  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000731  00000000  00000000  00002c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ba3  00000000  00000000  00003331  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00003ed4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003df  00000000  00000000  00003ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000966  00000000  00000000  000043db  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00004d41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
      12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	11 e0       	ldi	r17, 0x01	; 1
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	ee e6       	ldi	r30, 0x6E	; 110
      3a:	f0 e1       	ldi	r31, 0x10	; 16
      3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0
      42:	ac 34       	cpi	r26, 0x4C	; 76
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
      48:	21 e0       	ldi	r18, 0x01	; 1
      4a:	ac e4       	ldi	r26, 0x4C	; 76
      4c:	b1 e0       	ldi	r27, 0x01	; 1
      4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
      50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
      52:	aa 35       	cpi	r26, 0x5A	; 90
      54:	b2 07       	cpc	r27, r18
      56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
      58:	d4 d0       	rcall	.+424    	; 0x202 <main>
      5a:	07 c8       	rjmp	.-4082   	; 0xfffff06a <__eeprom_end+0xff7ef06a>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <LCD_Command>:
	LCD_Command(0x1C);
}

void LCD_Shift_L()
{
	LCD_Command(0x18);
      5e:	92 b3       	in	r25, 0x12	; 18
      60:	9f 70       	andi	r25, 0x0F	; 15
      62:	28 2f       	mov	r18, r24
      64:	20 7f       	andi	r18, 0xF0	; 240
      66:	92 2b       	or	r25, r18
      68:	92 bb       	out	0x12, r25	; 18
      6a:	92 98       	cbi	0x12, 2	; 18
      6c:	93 9a       	sbi	0x12, 3	; 18
      6e:	32 e0       	ldi	r19, 0x02	; 2
      70:	3a 95       	dec	r19
      72:	f1 f7       	brne	.-4      	; 0x70 <LCD_Command+0x12>
      74:	00 c0       	rjmp	.+0      	; 0x76 <LCD_Command+0x18>
      76:	93 98       	cbi	0x12, 3	; 18
      78:	ef e8       	ldi	r30, 0x8F	; 143
      7a:	f1 e0       	ldi	r31, 0x01	; 1
      7c:	31 97       	sbiw	r30, 0x01	; 1
      7e:	f1 f7       	brne	.-4      	; 0x7c <LCD_Command+0x1e>
      80:	00 c0       	rjmp	.+0      	; 0x82 <LCD_Command+0x24>
      82:	00 00       	nop
      84:	22 b3       	in	r18, 0x12	; 18
      86:	2f 70       	andi	r18, 0x0F	; 15
      88:	f0 e1       	ldi	r31, 0x10	; 16
      8a:	8f 9f       	mul	r24, r31
      8c:	c0 01       	movw	r24, r0
      8e:	11 24       	eor	r1, r1
      90:	82 2b       	or	r24, r18
      92:	82 bb       	out	0x12, r24	; 18
      94:	93 9a       	sbi	0x12, 3	; 18
      96:	32 e0       	ldi	r19, 0x02	; 2
      98:	3a 95       	dec	r19
      9a:	f1 f7       	brne	.-4      	; 0x98 <LCD_Command+0x3a>
      9c:	00 c0       	rjmp	.+0      	; 0x9e <LCD_Command+0x40>
      9e:	93 98       	cbi	0x12, 3	; 18
      a0:	8f e9       	ldi	r24, 0x9F	; 159
      a2:	9f e0       	ldi	r25, 0x0F	; 15
      a4:	01 97       	sbiw	r24, 0x01	; 1
      a6:	f1 f7       	brne	.-4      	; 0xa4 <LCD_Command+0x46>
      a8:	00 c0       	rjmp	.+0      	; 0xaa <LCD_Command+0x4c>
      aa:	00 00       	nop
      ac:	08 95       	ret

000000ae <LCD_Char>:
      ae:	92 b3       	in	r25, 0x12	; 18
      b0:	9f 70       	andi	r25, 0x0F	; 15
      b2:	28 2f       	mov	r18, r24
      b4:	20 7f       	andi	r18, 0xF0	; 240
      b6:	92 2b       	or	r25, r18
      b8:	92 bb       	out	0x12, r25	; 18
      ba:	92 9a       	sbi	0x12, 2	; 18
      bc:	93 9a       	sbi	0x12, 3	; 18
      be:	32 e0       	ldi	r19, 0x02	; 2
      c0:	3a 95       	dec	r19
      c2:	f1 f7       	brne	.-4      	; 0xc0 <LCD_Char+0x12>
      c4:	00 c0       	rjmp	.+0      	; 0xc6 <LCD_Char+0x18>
      c6:	93 98       	cbi	0x12, 3	; 18
      c8:	ef e8       	ldi	r30, 0x8F	; 143
      ca:	f1 e0       	ldi	r31, 0x01	; 1
      cc:	31 97       	sbiw	r30, 0x01	; 1
      ce:	f1 f7       	brne	.-4      	; 0xcc <LCD_Char+0x1e>
      d0:	00 c0       	rjmp	.+0      	; 0xd2 <LCD_Char+0x24>
      d2:	00 00       	nop
      d4:	22 b3       	in	r18, 0x12	; 18
      d6:	2f 70       	andi	r18, 0x0F	; 15
      d8:	f0 e1       	ldi	r31, 0x10	; 16
      da:	8f 9f       	mul	r24, r31
      dc:	c0 01       	movw	r24, r0
      de:	11 24       	eor	r1, r1
      e0:	82 2b       	or	r24, r18
      e2:	82 bb       	out	0x12, r24	; 18
      e4:	93 9a       	sbi	0x12, 3	; 18
      e6:	32 e0       	ldi	r19, 0x02	; 2
      e8:	3a 95       	dec	r19
      ea:	f1 f7       	brne	.-4      	; 0xe8 <LCD_Char+0x3a>
      ec:	00 c0       	rjmp	.+0      	; 0xee <LCD_Char+0x40>
      ee:	93 98       	cbi	0x12, 3	; 18
      f0:	8f e9       	ldi	r24, 0x9F	; 159
      f2:	9f e0       	ldi	r25, 0x0F	; 15
      f4:	01 97       	sbiw	r24, 0x01	; 1
      f6:	f1 f7       	brne	.-4      	; 0xf4 <LCD_Char+0x46>
      f8:	00 c0       	rjmp	.+0      	; 0xfa <LCD_Char+0x4c>
      fa:	00 00       	nop
      fc:	08 95       	ret

000000fe <LCD_Init>:
      fe:	8f ef       	ldi	r24, 0xFF	; 255
     100:	81 bb       	out	0x11, r24	; 17
     102:	8f e3       	ldi	r24, 0x3F	; 63
     104:	9c e9       	ldi	r25, 0x9C	; 156
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Init+0x8>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Init+0xe>
     10c:	00 00       	nop
     10e:	83 e3       	ldi	r24, 0x33	; 51
     110:	a6 df       	rcall	.-180    	; 0x5e <LCD_Command>
     112:	82 e3       	ldi	r24, 0x32	; 50
     114:	a4 df       	rcall	.-184    	; 0x5e <LCD_Command>
     116:	88 e2       	ldi	r24, 0x28	; 40
     118:	a2 df       	rcall	.-188    	; 0x5e <LCD_Command>
     11a:	8c e0       	ldi	r24, 0x0C	; 12
     11c:	a0 df       	rcall	.-192    	; 0x5e <LCD_Command>
     11e:	86 e0       	ldi	r24, 0x06	; 6
     120:	9e df       	rcall	.-196    	; 0x5e <LCD_Command>
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	9c df       	rcall	.-200    	; 0x5e <LCD_Command>
     126:	8f e9       	ldi	r24, 0x9F	; 159
     128:	9f e0       	ldi	r25, 0x0F	; 15
     12a:	01 97       	sbiw	r24, 0x01	; 1
     12c:	f1 f7       	brne	.-4      	; 0x12a <LCD_Init+0x2c>
     12e:	00 c0       	rjmp	.+0      	; 0x130 <LCD_Init+0x32>
     130:	00 00       	nop
     132:	80 e8       	ldi	r24, 0x80	; 128
     134:	94 df       	rcall	.-216    	; 0x5e <LCD_Command>
     136:	08 95       	ret

00000138 <LCD_String>:
     138:	cf 93       	push	r28
     13a:	df 93       	push	r29
     13c:	ec 01       	movw	r28, r24
     13e:	88 81       	ld	r24, Y
     140:	88 23       	and	r24, r24
     142:	29 f0       	breq	.+10     	; 0x14e <LCD_String+0x16>
     144:	21 96       	adiw	r28, 0x01	; 1
     146:	b3 df       	rcall	.-154    	; 0xae <LCD_Char>
     148:	89 91       	ld	r24, Y+
     14a:	81 11       	cpse	r24, r1
     14c:	fc cf       	rjmp	.-8      	; 0x146 <LCD_String+0xe>
     14e:	df 91       	pop	r29
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <LCD_String_xy>:
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	ea 01       	movw	r28, r20
     15a:	81 11       	cpse	r24, r1
     15c:	07 c0       	rjmp	.+14     	; 0x16c <LCD_String_xy+0x18>
     15e:	60 31       	cpi	r22, 0x10	; 16
     160:	68 f4       	brcc	.+26     	; 0x17c <LCD_String_xy+0x28>
     162:	86 2f       	mov	r24, r22
     164:	8f 70       	andi	r24, 0x0F	; 15
     166:	80 68       	ori	r24, 0x80	; 128
     168:	7a df       	rcall	.-268    	; 0x5e <LCD_Command>
     16a:	08 c0       	rjmp	.+16     	; 0x17c <LCD_String_xy+0x28>
     16c:	81 30       	cpi	r24, 0x01	; 1
     16e:	31 f4       	brne	.+12     	; 0x17c <LCD_String_xy+0x28>
     170:	60 31       	cpi	r22, 0x10	; 16
     172:	20 f4       	brcc	.+8      	; 0x17c <LCD_String_xy+0x28>
     174:	86 2f       	mov	r24, r22
     176:	8f 70       	andi	r24, 0x0F	; 15
     178:	80 6c       	ori	r24, 0xC0	; 192
     17a:	71 df       	rcall	.-286    	; 0x5e <LCD_Command>
     17c:	ce 01       	movw	r24, r28
     17e:	dc df       	rcall	.-72     	; 0x138 <LCD_String>
     180:	df 91       	pop	r29
     182:	cf 91       	pop	r28
     184:	08 95       	ret

00000186 <LCD_Clear>:
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	6a df       	rcall	.-300    	; 0x5e <LCD_Command>
     18a:	8f e9       	ldi	r24, 0x9F	; 159
     18c:	9f e0       	ldi	r25, 0x0F	; 15
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	f1 f7       	brne	.-4      	; 0x18e <LCD_Clear+0x8>
     192:	00 c0       	rjmp	.+0      	; 0x194 <LCD_Clear+0xe>
     194:	00 00       	nop
     196:	80 e8       	ldi	r24, 0x80	; 128
     198:	62 df       	rcall	.-316    	; 0x5e <LCD_Command>
     19a:	08 95       	ret

0000019c <LCD_Decimal_xy>:
}

void LCD_Decimal_xy(char row, char pos, uint8_t i)
{
     19c:	ef 92       	push	r14
     19e:	ff 92       	push	r15
     1a0:	0f 93       	push	r16
     1a2:	1f 93       	push	r17
     1a4:	cf 93       	push	r28
     1a6:	df 93       	push	r29
     1a8:	cd b7       	in	r28, 0x3d	; 61
     1aa:	de b7       	in	r29, 0x3e	; 62
     1ac:	2a 97       	sbiw	r28, 0x0a	; 10
     1ae:	0f b6       	in	r0, 0x3f	; 63
     1b0:	f8 94       	cli
     1b2:	de bf       	out	0x3e, r29	; 62
     1b4:	0f be       	out	0x3f, r0	; 63
     1b6:	cd bf       	out	0x3d, r28	; 61
     1b8:	f8 2e       	mov	r15, r24
     1ba:	e6 2e       	mov	r14, r22
	char buffer[10];
	sprintf(buffer, "%d", i);
     1bc:	1f 92       	push	r1
     1be:	4f 93       	push	r20
     1c0:	83 e6       	ldi	r24, 0x63	; 99
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	9f 93       	push	r25
     1c6:	8f 93       	push	r24
     1c8:	8e 01       	movw	r16, r28
     1ca:	0f 5f       	subi	r16, 0xFF	; 255
     1cc:	1f 4f       	sbci	r17, 0xFF	; 255
     1ce:	1f 93       	push	r17
     1d0:	0f 93       	push	r16
     1d2:	73 d4       	rcall	.+2278   	; 0xaba <sprintf>
	LCD_String_xy(row, pos, buffer);
     1d4:	a8 01       	movw	r20, r16
     1d6:	6e 2d       	mov	r22, r14
     1d8:	8f 2d       	mov	r24, r15
     1da:	bc df       	rcall	.-136    	; 0x154 <LCD_String_xy>
     1dc:	0f 90       	pop	r0
     1de:	0f 90       	pop	r0
     1e0:	0f 90       	pop	r0
     1e2:	0f 90       	pop	r0
     1e4:	0f 90       	pop	r0
     1e6:	0f 90       	pop	r0
     1e8:	2a 96       	adiw	r28, 0x0a	; 10
     1ea:	0f b6       	in	r0, 0x3f	; 63
     1ec:	f8 94       	cli
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	0f be       	out	0x3f, r0	; 63
     1f2:	cd bf       	out	0x3d, r28	; 61
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	1f 91       	pop	r17
     1fa:	0f 91       	pop	r16
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <main>:
#include "LCD_4bit_h_file.h"

uint8_t pressed=0,confirm=1,try=0;
int p=0,r=0,threshold=100,i=0,j=0,k=0,l=0;
int main(void)
{
     202:	0f 93       	push	r16
     204:	1f 93       	push	r17
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
	DDRC &= ~(1<<DDC0 | 1<<DDC1 | 1<<DDC2 | 1<<DDC3| 1<<DDC4| 1<<DDC5);
     20a:	84 b3       	in	r24, 0x14	; 20
     20c:	80 7c       	andi	r24, 0xC0	; 192
     20e:	84 bb       	out	0x14, r24	; 20
	PORTC |= 1<<PINC0| 1<<PINC1 | 1<<PINC2 | 1<<PINC3 | 1<<PINC4 | 1<<PINC5;
     210:	85 b3       	in	r24, 0x15	; 21
     212:	8f 63       	ori	r24, 0x3F	; 63
     214:	85 bb       	out	0x15, r24	; 21
	DDRB &= ~(1<<DDB6| 1<<DDB7);
     216:	87 b3       	in	r24, 0x17	; 23
     218:	8f 73       	andi	r24, 0x3F	; 63
     21a:	87 bb       	out	0x17, r24	; 23
	DDRB |= 1<<DDB1;
     21c:	b9 9a       	sbi	0x17, 1	; 23
	PORTB |= 1<<PINB6 | 1<<PINB7 | 1<< PINB1;
     21e:	88 b3       	in	r24, 0x18	; 24
     220:	82 6c       	ori	r24, 0xC2	; 194
     222:	88 bb       	out	0x18, r24	; 24
    LCD_Init();
     224:	6c df       	rcall	.-296    	; 0xfe <LCD_Init>
	LCD_String_xy(0,0,"*****EVM is*****");
     226:	46 e6       	ldi	r20, 0x66	; 102
     228:	50 e0       	ldi	r21, 0x00	; 0
     22a:	60 e0       	ldi	r22, 0x00	; 0
     22c:	80 e0       	ldi	r24, 0x00	; 0
     22e:	92 df       	rcall	.-220    	; 0x154 <LCD_String_xy>
	LCD_String_xy(1,0,"****LOCKED!*****");	
     230:	47 e7       	ldi	r20, 0x77	; 119
     232:	50 e0       	ldi	r21, 0x00	; 0
     234:	60 e0       	ldi	r22, 0x00	; 0
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	8d df       	rcall	.-230    	; 0x154 <LCD_String_xy>
						{
							if(pressed ==0)
							{
								LCD_Clear();
								LCD_String_xy(0,0,"Try again...");
								pressed =25;
     23a:	c9 e1       	ldi	r28, 0x19	; 25
			{
				if(pressed ==0)
				{
					//k++;
					//LCD_Decimal_xy(1,3,k);
					pressed =2;
     23c:	02 e0       	ldi	r16, 0x02	; 2
			{
				if(pressed ==0)
				{
					//j++;
					//LCD_Decimal_xy(0,11,j);
					pressed =3;
     23e:	13 e0       	ldi	r17, 0x03	; 3
			{
				if(pressed ==0)
				{
// 					i++;
// 					LCD_Decimal_xy(0,3,i);
					pressed =4;
     240:	d4 e0       	ldi	r29, 0x04	; 4
     242:	5f c0       	rjmp	.+190    	; 0x302 <main+0x100>
	LCD_String_xy(1,0,"****LOCKED!*****");	
    while (1) 
    {
		while(confirm)
		{
			if(bit_is_clear(PINB,7))
     244:	b7 99       	sbic	0x16, 7	; 22
     246:	47 c0       	rjmp	.+142    	; 0x2d6 <main+0xd4>
			{
				p++;
     248:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     24c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     250:	01 96       	adiw	r24, 0x01	; 1
     252:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     256:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
				if(p>threshold)
     25a:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     25e:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     262:	28 17       	cp	r18, r24
     264:	39 07       	cpc	r19, r25
     266:	0c f0       	brlt	.+2      	; 0x26a <main+0x68>
     268:	4c c0       	rjmp	.+152    	; 0x302 <main+0x100>
				{
					if(pressed ==0)
     26a:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     26e:	81 11       	cpse	r24, r1
     270:	2d c0       	rjmp	.+90     	; 0x2cc <main+0xca>
					{
						PORTB &= ~(1<<PINB1);
     272:	c1 98       	cbi	0x18, 1	; 24
						LCD_Clear();
     274:	88 df       	rcall	.-240    	; 0x186 <LCD_Clear>
						LCD_String_xy(0,0,"-----EVM is-----");
     276:	48 e8       	ldi	r20, 0x88	; 136
     278:	50 e0       	ldi	r21, 0x00	; 0
     27a:	60 e0       	ldi	r22, 0x00	; 0
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	6a df       	rcall	.-300    	; 0x154 <LCD_String_xy>
						LCD_String_xy(1,0,"---UNLOCKED!----");
     280:	49 e9       	ldi	r20, 0x99	; 153
     282:	50 e0       	ldi	r21, 0x00	; 0
     284:	60 e0       	ldi	r22, 0x00	; 0
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	65 df       	rcall	.-310    	; 0x154 <LCD_String_xy>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28a:	2f ef       	ldi	r18, 0xFF	; 255
     28c:	83 ed       	ldi	r24, 0xD3	; 211
     28e:	90 e3       	ldi	r25, 0x30	; 48
     290:	21 50       	subi	r18, 0x01	; 1
     292:	80 40       	sbci	r24, 0x00	; 0
     294:	90 40       	sbci	r25, 0x00	; 0
     296:	e1 f7       	brne	.-8      	; 0x290 <main+0x8e>
     298:	00 c0       	rjmp	.+0      	; 0x29a <main+0x98>
     29a:	00 00       	nop
						_delay_ms(2000);
						LCD_Clear();
     29c:	74 df       	rcall	.-280    	; 0x186 <LCD_Clear>
						LCD_String_xy(0,0,"A:");
     29e:	4a ea       	ldi	r20, 0xAA	; 170
     2a0:	50 e0       	ldi	r21, 0x00	; 0
     2a2:	60 e0       	ldi	r22, 0x00	; 0
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	56 df       	rcall	.-340    	; 0x154 <LCD_String_xy>
						LCD_String_xy(0,8,"B:");
     2a8:	4d ea       	ldi	r20, 0xAD	; 173
     2aa:	50 e0       	ldi	r21, 0x00	; 0
     2ac:	68 e0       	ldi	r22, 0x08	; 8
     2ae:	80 e0       	ldi	r24, 0x00	; 0
     2b0:	51 df       	rcall	.-350    	; 0x154 <LCD_String_xy>
						LCD_String_xy(1,0,"C:");
     2b2:	40 eb       	ldi	r20, 0xB0	; 176
     2b4:	50 e0       	ldi	r21, 0x00	; 0
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	81 e0       	ldi	r24, 0x01	; 1
     2ba:	4c df       	rcall	.-360    	; 0x154 <LCD_String_xy>
						LCD_String_xy(1,8,"D:");
     2bc:	43 eb       	ldi	r20, 0xB3	; 179
     2be:	50 e0       	ldi	r21, 0x00	; 0
     2c0:	68 e0       	ldi	r22, 0x08	; 8
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	47 df       	rcall	.-370    	; 0x154 <LCD_String_xy>
						confirm=0;
     2c6:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <confirm>
						break;
     2ca:	1f c0       	rjmp	.+62     	; 0x30a <main+0x108>
					}
					p=0;
     2cc:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     2d0:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     2d4:	16 c0       	rjmp	.+44     	; 0x302 <main+0x100>
				}
			}
			else
			{
				r++;
     2d6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <r>
     2da:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <r+0x1>
     2de:	01 96       	adiw	r24, 0x01	; 1
     2e0:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <r+0x1>
     2e4:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <r>
				if(r>threshold)
     2e8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2ec:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     2f0:	28 17       	cp	r18, r24
     2f2:	39 07       	cpc	r19, r25
     2f4:	34 f4       	brge	.+12     	; 0x302 <main+0x100>
				{
					pressed=0;
     2f6:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
					r=0;
     2fa:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <r+0x1>
     2fe:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <r>
    LCD_Init();
	LCD_String_xy(0,0,"*****EVM is*****");
	LCD_String_xy(1,0,"****LOCKED!*****");	
    while (1) 
    {
		while(confirm)
     302:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <confirm>
     306:	81 11       	cpse	r24, r1
     308:	9d cf       	rjmp	.-198    	; 0x244 <main+0x42>
				}
				
			}
		}
		
		if(bit_is_clear(PINC,0))//PINC & (1<<PC0) == 1
     30a:	98 99       	sbic	0x13, 0	; 19
     30c:	1c c0       	rjmp	.+56     	; 0x346 <main+0x144>
		{
			p++;
     30e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     312:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     31c:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
			if(p>threshold)
     320:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     324:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     328:	28 17       	cp	r18, r24
     32a:	39 07       	cpc	r19, r25
     32c:	0c f0       	brlt	.+2      	; 0x330 <main+0x12e>
     32e:	99 c0       	rjmp	.+306    	; 0x462 <__stack+0x3>
			{
				if(pressed ==0)
     330:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     334:	81 11       	cpse	r24, r1
     336:	02 c0       	rjmp	.+4      	; 0x33c <main+0x13a>
				{
// 					i++;
// 					LCD_Decimal_xy(0,3,i);
					pressed =4;
     338:	d0 93 59 01 	sts	0x0159, r29	; 0x800159 <pressed>
				}
				p=0;
     33c:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     340:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     344:	8e c0       	rjmp	.+284    	; 0x462 <__stack+0x3>
			}
		}
		 else if(bit_is_clear(PINC,1))
     346:	99 99       	sbic	0x13, 1	; 19
     348:	1c c0       	rjmp	.+56     	; 0x382 <main+0x180>
		{
			p++;
     34a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     34e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     358:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
			if(p>threshold)
     35c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     360:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     364:	28 17       	cp	r18, r24
     366:	39 07       	cpc	r19, r25
     368:	0c f0       	brlt	.+2      	; 0x36c <main+0x16a>
     36a:	7b c0       	rjmp	.+246    	; 0x462 <__stack+0x3>
			{
				if(pressed ==0)
     36c:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     370:	81 11       	cpse	r24, r1
     372:	02 c0       	rjmp	.+4      	; 0x378 <main+0x176>
				{
					//j++;
					//LCD_Decimal_xy(0,11,j);
					pressed =3;
     374:	10 93 59 01 	sts	0x0159, r17	; 0x800159 <pressed>
				}
				p=0;
     378:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     37c:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     380:	70 c0       	rjmp	.+224    	; 0x462 <__stack+0x3>
			}
		}
		else if(bit_is_clear(PINC,2))
     382:	9a 99       	sbic	0x13, 2	; 19
     384:	1c c0       	rjmp	.+56     	; 0x3be <main+0x1bc>
		{
			p++;
     386:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     38a:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     38e:	01 96       	adiw	r24, 0x01	; 1
     390:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     394:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
			if(p>threshold)
     398:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     39c:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     3a0:	28 17       	cp	r18, r24
     3a2:	39 07       	cpc	r19, r25
     3a4:	0c f0       	brlt	.+2      	; 0x3a8 <main+0x1a6>
     3a6:	5d c0       	rjmp	.+186    	; 0x462 <__stack+0x3>
			{
				if(pressed ==0)
     3a8:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     3ac:	81 11       	cpse	r24, r1
     3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <main+0x1b2>
				{
					//k++;
					//LCD_Decimal_xy(1,3,k);
					pressed =2;
     3b0:	00 93 59 01 	sts	0x0159, r16	; 0x800159 <pressed>
				}
				p=0;
     3b4:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     3b8:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     3bc:	52 c0       	rjmp	.+164    	; 0x462 <__stack+0x3>
			}
		}
		else if(bit_is_clear(PINC,3))
     3be:	9b 99       	sbic	0x13, 3	; 19
     3c0:	1d c0       	rjmp	.+58     	; 0x3fc <main+0x1fa>
		{
			p++;
     3c2:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     3c6:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     3ca:	01 96       	adiw	r24, 0x01	; 1
     3cc:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     3d0:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
			if(p>threshold)
     3d4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     3d8:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     3dc:	28 17       	cp	r18, r24
     3de:	39 07       	cpc	r19, r25
     3e0:	0c f0       	brlt	.+2      	; 0x3e4 <main+0x1e2>
     3e2:	3f c0       	rjmp	.+126    	; 0x462 <__stack+0x3>
			{
				if(pressed ==0)
     3e4:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     3e8:	81 11       	cpse	r24, r1
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <main+0x1f0>
				{
					//l++;
					//LCD_Decimal_xy(1,11,l);
					pressed =1;
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <pressed>
				}
				p=0;
     3f2:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     3f6:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     3fa:	33 c0       	rjmp	.+102    	; 0x462 <__stack+0x3>
			}
		}
		else if(bit_is_clear(PINB,6))
     3fc:	b6 99       	sbic	0x16, 6	; 22
     3fe:	1a c0       	rjmp	.+52     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		{
			p++;
     400:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     404:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     408:	01 96       	adiw	r24, 0x01	; 1
     40a:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     40e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
			if(p>threshold)
     412:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     416:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     41a:	28 17       	cp	r18, r24
     41c:	39 07       	cpc	r19, r25
     41e:	0c f5       	brge	.+66     	; 0x462 <__stack+0x3>
			{
				if(pressed ==0)
     420:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     424:	88 23       	and	r24, r24
     426:	09 f4       	brne	.+2      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     428:	04 c3       	rjmp	.+1544   	; 0xa32 <__stack+0x5d3>
					LCD_Decimal_xy(1,3,k);
					LCD_Decimal_xy(1,11,l);			
					break;
					
				}
				p=0;
     42a:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     42e:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     432:	1c c0       	rjmp	.+56     	; 0x46c <__stack+0xd>
			}
		}
		else
		{
			r++;
     434:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <r>
     438:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <r+0x1>
     43c:	01 96       	adiw	r24, 0x01	; 1
     43e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <r+0x1>
     442:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <r>
			if(r>threshold)
     446:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     44a:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     44e:	28 17       	cp	r18, r24
     450:	39 07       	cpc	r19, r25
     452:	3c f4       	brge	.+14     	; 0x462 <__stack+0x3>
			{
				pressed=0;
     454:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
				r=0;
     458:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <r+0x1>
     45c:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <r>
     460:	50 cf       	rjmp	.-352    	; 0x302 <main+0x100>
			}
			
		}
		
		
		if(pressed !=0 && pressed !=25 && pressed !=5)
     462:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     466:	88 23       	and	r24, r24
     468:	09 f4       	brne	.+2      	; 0x46c <__stack+0xd>
     46a:	4b cf       	rjmp	.-362    	; 0x302 <main+0x100>
     46c:	89 31       	cpi	r24, 0x19	; 25
     46e:	09 f4       	brne	.+2      	; 0x472 <__stack+0x13>
     470:	48 cf       	rjmp	.-368    	; 0x302 <main+0x100>
     472:	85 30       	cpi	r24, 0x05	; 5
     474:	09 f4       	brne	.+2      	; 0x478 <__stack+0x19>
     476:	45 cf       	rjmp	.-374    	; 0x302 <main+0x100>
		{
			LCD_Clear();
     478:	86 de       	rcall	.-756    	; 0x186 <LCD_Clear>
			switch(pressed)
     47a:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	09 f4       	brne	.+2      	; 0x484 <__stack+0x25>
     482:	be c0       	rjmp	.+380    	; 0x600 <__stack+0x1a1>
     484:	18 f4       	brcc	.+6      	; 0x48c <__stack+0x2d>
     486:	81 30       	cpi	r24, 0x01	; 1
     488:	41 f0       	breq	.+16     	; 0x49a <__stack+0x3b>
     48a:	3b cf       	rjmp	.-394    	; 0x302 <main+0x100>
     48c:	83 30       	cpi	r24, 0x03	; 3
     48e:	09 f4       	brne	.+2      	; 0x492 <__stack+0x33>
     490:	6a c1       	rjmp	.+724    	; 0x766 <__stack+0x307>
     492:	84 30       	cpi	r24, 0x04	; 4
     494:	09 f4       	brne	.+2      	; 0x498 <__stack+0x39>
     496:	1a c2       	rjmp	.+1076   	; 0x8cc <__stack+0x46d>
     498:	34 cf       	rjmp	.-408    	; 0x302 <main+0x100>
			{
				case 1:
				LCD_String_xy(0,0,"Mr. A");
     49a:	4a ed       	ldi	r20, 0xDA	; 218
     49c:	50 e0       	ldi	r21, 0x00	; 0
     49e:	60 e0       	ldi	r22, 0x00	; 0
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	58 de       	rcall	.-848    	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"Confirm? Yes/No");
     4a4:	40 ee       	ldi	r20, 0xE0	; 224
     4a6:	50 e0       	ldi	r21, 0x00	; 0
     4a8:	60 e0       	ldi	r22, 0x00	; 0
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	53 de       	rcall	.-858    	; 0x154 <LCD_String_xy>
				pressed=0;
     4ae:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
						}
					}
					else if(bit_is_clear(PINC,4))
					{
						p++;
						if(p>threshold)
     4b2:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     4b6:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
				LCD_String_xy(0,0,"Mr. A");
				LCD_String_xy(1,0,"Confirm? Yes/No");
				pressed=0;
				while(1)
				{
					if(bit_is_clear(PINC,5))
     4ba:	9d 99       	sbic	0x13, 5	; 19
     4bc:	35 c0       	rjmp	.+106    	; 0x528 <__stack+0xc9>
					{
						p++;
     4be:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     4c2:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     4cc:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     4d0:	28 17       	cp	r18, r24
     4d2:	39 07       	cpc	r19, r25
     4d4:	94 f7       	brge	.-28     	; 0x4ba <__stack+0x5b>
						{
							if(pressed ==0)
     4d6:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     4da:	81 11       	cpse	r24, r1
     4dc:	20 c0       	rjmp	.+64     	; 0x51e <__stack+0xbf>
							{
								LCD_Clear();
     4de:	53 de       	rcall	.-858    	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"You voted for");
     4e0:	40 ef       	ldi	r20, 0xF0	; 240
     4e2:	50 e0       	ldi	r21, 0x00	; 0
     4e4:	60 e0       	ldi	r22, 0x00	; 0
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	35 de       	rcall	.-918    	; 0x154 <LCD_String_xy>
								LCD_String_xy(1,0,"Mr.A!!");
     4ea:	4e ef       	ldi	r20, 0xFE	; 254
     4ec:	50 e0       	ldi	r21, 0x00	; 0
     4ee:	60 e0       	ldi	r22, 0x00	; 0
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	30 de       	rcall	.-928    	; 0x154 <LCD_String_xy>
								pressed =25;
     4f4:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								i++;
     4f8:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <i>
     4fc:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <i+0x1>
     500:	01 96       	adiw	r24, 0x01	; 1
     502:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <i+0x1>
     506:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <i>
     50a:	2f ef       	ldi	r18, 0xFF	; 255
     50c:	83 ed       	ldi	r24, 0xD3	; 211
     50e:	90 e3       	ldi	r25, 0x30	; 48
     510:	21 50       	subi	r18, 0x01	; 1
     512:	80 40       	sbci	r24, 0x00	; 0
     514:	90 40       	sbci	r25, 0x00	; 0
     516:	e1 f7       	brne	.-8      	; 0x510 <__stack+0xb1>
     518:	00 c0       	rjmp	.+0      	; 0x51a <__stack+0xbb>
     51a:	00 00       	nop
     51c:	46 c0       	rjmp	.+140    	; 0x5aa <__stack+0x14b>
								_delay_ms(2000);
								break;
							}
							p=0;
     51e:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     522:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     526:	c9 cf       	rjmp	.-110    	; 0x4ba <__stack+0x5b>
						}
					}
					else if(bit_is_clear(PINC,4))
     528:	9c 99       	sbic	0x13, 4	; 19
     52a:	2b c0       	rjmp	.+86     	; 0x582 <__stack+0x123>
					{
						p++;
     52c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     530:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     534:	01 96       	adiw	r24, 0x01	; 1
     536:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     53a:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     53e:	28 17       	cp	r18, r24
     540:	39 07       	cpc	r19, r25
     542:	0c f0       	brlt	.+2      	; 0x546 <__stack+0xe7>
     544:	ba cf       	rjmp	.-140    	; 0x4ba <__stack+0x5b>
						{
							if(pressed ==0)
     546:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     54a:	81 11       	cpse	r24, r1
     54c:	15 c0       	rjmp	.+42     	; 0x578 <__stack+0x119>
							{
								LCD_Clear();
     54e:	1b de       	rcall	.-970    	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"Try again...");
     550:	45 e0       	ldi	r20, 0x05	; 5
     552:	51 e0       	ldi	r21, 0x01	; 1
     554:	60 e0       	ldi	r22, 0x00	; 0
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	fd dd       	rcall	.-1030   	; 0x154 <LCD_String_xy>
								pressed =25;
     55a:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								try =1;
     55e:	81 e0       	ldi	r24, 0x01	; 1
     560:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <try>
     564:	2f ef       	ldi	r18, 0xFF	; 255
     566:	83 ed       	ldi	r24, 0xD3	; 211
     568:	90 e3       	ldi	r25, 0x30	; 48
     56a:	21 50       	subi	r18, 0x01	; 1
     56c:	80 40       	sbci	r24, 0x00	; 0
     56e:	90 40       	sbci	r25, 0x00	; 0
     570:	e1 f7       	brne	.-8      	; 0x56a <__stack+0x10b>
     572:	00 c0       	rjmp	.+0      	; 0x574 <__stack+0x115>
     574:	00 00       	nop
     576:	19 c0       	rjmp	.+50     	; 0x5aa <__stack+0x14b>
								_delay_ms(2000);
								break;
							}
							p=0;
     578:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     57c:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     580:	9c cf       	rjmp	.-200    	; 0x4ba <__stack+0x5b>
						}
					}
					else
					{
						r++;
     582:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <r>
     586:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <r+0x1>
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <r+0x1>
     590:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <r>
						if(r>threshold)
     594:	28 17       	cp	r18, r24
     596:	39 07       	cpc	r19, r25
     598:	0c f0       	brlt	.+2      	; 0x59c <__stack+0x13d>
     59a:	8f cf       	rjmp	.-226    	; 0x4ba <__stack+0x5b>
						{
							pressed=0;
     59c:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
							r=0;
     5a0:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <r+0x1>
     5a4:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <r>
     5a8:	88 cf       	rjmp	.-240    	; 0x4ba <__stack+0x5b>
						}
						
					}
				}
				LCD_Clear();
     5aa:	ed dd       	rcall	.-1062   	; 0x186 <LCD_Clear>
				if(try)
     5ac:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <try>
     5b0:	88 23       	and	r24, r24
     5b2:	b9 f0       	breq	.+46     	; 0x5e2 <__stack+0x183>
				{
					LCD_String_xy(0,0,"A:");
     5b4:	4a ea       	ldi	r20, 0xAA	; 170
     5b6:	50 e0       	ldi	r21, 0x00	; 0
     5b8:	60 e0       	ldi	r22, 0x00	; 0
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	cb dd       	rcall	.-1130   	; 0x154 <LCD_String_xy>
					LCD_String_xy(0,8,"B:");
     5be:	4d ea       	ldi	r20, 0xAD	; 173
     5c0:	50 e0       	ldi	r21, 0x00	; 0
     5c2:	68 e0       	ldi	r22, 0x08	; 8
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	c6 dd       	rcall	.-1140   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,0,"C:");
     5c8:	40 eb       	ldi	r20, 0xB0	; 176
     5ca:	50 e0       	ldi	r21, 0x00	; 0
     5cc:	60 e0       	ldi	r22, 0x00	; 0
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	c1 dd       	rcall	.-1150   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,8,"D:");
     5d2:	43 eb       	ldi	r20, 0xB3	; 179
     5d4:	50 e0       	ldi	r21, 0x00	; 0
     5d6:	68 e0       	ldi	r22, 0x08	; 8
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	bc dd       	rcall	.-1160   	; 0x154 <LCD_String_xy>
					try =0;
     5dc:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <try>
					break;
     5e0:	90 ce       	rjmp	.-736    	; 0x302 <main+0x100>
				}
				LCD_String_xy(0,0,"*****EVM is*****");
     5e2:	46 e6       	ldi	r20, 0x66	; 102
     5e4:	50 e0       	ldi	r21, 0x00	; 0
     5e6:	60 e0       	ldi	r22, 0x00	; 0
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	b4 dd       	rcall	.-1176   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"****LOCKED!*****");
     5ec:	47 e7       	ldi	r20, 0x77	; 119
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	60 e0       	ldi	r22, 0x00	; 0
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	af dd       	rcall	.-1186   	; 0x154 <LCD_String_xy>
				PORTB |= 1<<PINB1;
     5f6:	c1 9a       	sbi	0x18, 1	; 24
				confirm =1;
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <confirm>
				break;
     5fe:	81 ce       	rjmp	.-766    	; 0x302 <main+0x100>
				case 2:
				LCD_String_xy(0,0,"Voted for B!");
     600:	42 e1       	ldi	r20, 0x12	; 18
     602:	51 e0       	ldi	r21, 0x01	; 1
     604:	60 e0       	ldi	r22, 0x00	; 0
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	a5 dd       	rcall	.-1206   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"Confirm? Yes/No");
     60a:	40 ee       	ldi	r20, 0xE0	; 224
     60c:	50 e0       	ldi	r21, 0x00	; 0
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	a0 dd       	rcall	.-1216   	; 0x154 <LCD_String_xy>
				pressed=0;
     614:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
						}
					}
					else if(bit_is_clear(PINC,4))
					{
						p++;
						if(p>threshold)
     618:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     61c:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
				LCD_String_xy(0,0,"Voted for B!");
				LCD_String_xy(1,0,"Confirm? Yes/No");
				pressed=0;
				while(1)
				{
					if(bit_is_clear(PINC,5))
     620:	9d 99       	sbic	0x13, 5	; 19
     622:	35 c0       	rjmp	.+106    	; 0x68e <__stack+0x22f>
					{
						p++;
     624:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     628:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     62c:	01 96       	adiw	r24, 0x01	; 1
     62e:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     632:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     636:	28 17       	cp	r18, r24
     638:	39 07       	cpc	r19, r25
     63a:	94 f7       	brge	.-28     	; 0x620 <__stack+0x1c1>
						{
							if(pressed ==0)
     63c:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     640:	81 11       	cpse	r24, r1
     642:	20 c0       	rjmp	.+64     	; 0x684 <__stack+0x225>
							{
								LCD_Clear();
     644:	a0 dd       	rcall	.-1216   	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"You voted for");
     646:	40 ef       	ldi	r20, 0xF0	; 240
     648:	50 e0       	ldi	r21, 0x00	; 0
     64a:	60 e0       	ldi	r22, 0x00	; 0
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	82 dd       	rcall	.-1276   	; 0x154 <LCD_String_xy>
								LCD_String_xy(1,0,"Mr.B!!");
     650:	4f e1       	ldi	r20, 0x1F	; 31
     652:	51 e0       	ldi	r21, 0x01	; 1
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	7d dd       	rcall	.-1286   	; 0x154 <LCD_String_xy>
								pressed =25;
     65a:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								j++;
     65e:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <j>
     662:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <j+0x1>
     666:	01 96       	adiw	r24, 0x01	; 1
     668:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <j+0x1>
     66c:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <j>
     670:	2f ef       	ldi	r18, 0xFF	; 255
     672:	83 ed       	ldi	r24, 0xD3	; 211
     674:	90 e3       	ldi	r25, 0x30	; 48
     676:	21 50       	subi	r18, 0x01	; 1
     678:	80 40       	sbci	r24, 0x00	; 0
     67a:	90 40       	sbci	r25, 0x00	; 0
     67c:	e1 f7       	brne	.-8      	; 0x676 <__stack+0x217>
     67e:	00 c0       	rjmp	.+0      	; 0x680 <__stack+0x221>
     680:	00 00       	nop
     682:	46 c0       	rjmp	.+140    	; 0x710 <__stack+0x2b1>
								_delay_ms(2000);
								break;
							}
							p=0;
     684:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     688:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     68c:	c9 cf       	rjmp	.-110    	; 0x620 <__stack+0x1c1>
						}
					}
					else if(bit_is_clear(PINC,4))
     68e:	9c 99       	sbic	0x13, 4	; 19
     690:	2b c0       	rjmp	.+86     	; 0x6e8 <__stack+0x289>
					{
						p++;
     692:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     696:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     69a:	01 96       	adiw	r24, 0x01	; 1
     69c:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     6a0:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     6a4:	28 17       	cp	r18, r24
     6a6:	39 07       	cpc	r19, r25
     6a8:	0c f0       	brlt	.+2      	; 0x6ac <__stack+0x24d>
     6aa:	ba cf       	rjmp	.-140    	; 0x620 <__stack+0x1c1>
						{
							if(pressed ==0)
     6ac:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     6b0:	81 11       	cpse	r24, r1
     6b2:	15 c0       	rjmp	.+42     	; 0x6de <__stack+0x27f>
							{
								LCD_Clear();
     6b4:	68 dd       	rcall	.-1328   	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"Try again...");
     6b6:	45 e0       	ldi	r20, 0x05	; 5
     6b8:	51 e0       	ldi	r21, 0x01	; 1
     6ba:	60 e0       	ldi	r22, 0x00	; 0
     6bc:	80 e0       	ldi	r24, 0x00	; 0
     6be:	4a dd       	rcall	.-1388   	; 0x154 <LCD_String_xy>
								pressed =25;
     6c0:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								
								try=1;
     6c4:	81 e0       	ldi	r24, 0x01	; 1
     6c6:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <try>
     6ca:	2f ef       	ldi	r18, 0xFF	; 255
     6cc:	83 ed       	ldi	r24, 0xD3	; 211
     6ce:	90 e3       	ldi	r25, 0x30	; 48
     6d0:	21 50       	subi	r18, 0x01	; 1
     6d2:	80 40       	sbci	r24, 0x00	; 0
     6d4:	90 40       	sbci	r25, 0x00	; 0
     6d6:	e1 f7       	brne	.-8      	; 0x6d0 <__stack+0x271>
     6d8:	00 c0       	rjmp	.+0      	; 0x6da <__stack+0x27b>
     6da:	00 00       	nop
     6dc:	19 c0       	rjmp	.+50     	; 0x710 <__stack+0x2b1>
								_delay_ms(2000);
								break;
							}
							p=0;
     6de:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     6e2:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     6e6:	9c cf       	rjmp	.-200    	; 0x620 <__stack+0x1c1>
						}
					}
					else
					{
						r++;
     6e8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <r>
     6ec:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <r+0x1>
     6f0:	01 96       	adiw	r24, 0x01	; 1
     6f2:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <r+0x1>
     6f6:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <r>
						if(r>threshold)
     6fa:	28 17       	cp	r18, r24
     6fc:	39 07       	cpc	r19, r25
     6fe:	0c f0       	brlt	.+2      	; 0x702 <__stack+0x2a3>
     700:	8f cf       	rjmp	.-226    	; 0x620 <__stack+0x1c1>
						{
							pressed=0;
     702:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
							r=0;
     706:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <r+0x1>
     70a:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <r>
     70e:	88 cf       	rjmp	.-240    	; 0x620 <__stack+0x1c1>
						}
						
					}
				}
				LCD_Clear();
     710:	3a dd       	rcall	.-1420   	; 0x186 <LCD_Clear>
				if(try)
     712:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <try>
     716:	88 23       	and	r24, r24
     718:	b9 f0       	breq	.+46     	; 0x748 <__stack+0x2e9>
				{
					LCD_String_xy(0,0,"A:");
     71a:	4a ea       	ldi	r20, 0xAA	; 170
     71c:	50 e0       	ldi	r21, 0x00	; 0
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	18 dd       	rcall	.-1488   	; 0x154 <LCD_String_xy>
					LCD_String_xy(0,8,"B:");
     724:	4d ea       	ldi	r20, 0xAD	; 173
     726:	50 e0       	ldi	r21, 0x00	; 0
     728:	68 e0       	ldi	r22, 0x08	; 8
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	13 dd       	rcall	.-1498   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,0,"C:");
     72e:	40 eb       	ldi	r20, 0xB0	; 176
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	81 e0       	ldi	r24, 0x01	; 1
     736:	0e dd       	rcall	.-1508   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,8,"D:");
     738:	43 eb       	ldi	r20, 0xB3	; 179
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	68 e0       	ldi	r22, 0x08	; 8
     73e:	81 e0       	ldi	r24, 0x01	; 1
     740:	09 dd       	rcall	.-1518   	; 0x154 <LCD_String_xy>
					try =0;
     742:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <try>
					break;
     746:	dd cd       	rjmp	.-1094   	; 0x302 <main+0x100>
				}
				LCD_String_xy(0,0,"*****EVM is*****");
     748:	46 e6       	ldi	r20, 0x66	; 102
     74a:	50 e0       	ldi	r21, 0x00	; 0
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	01 dd       	rcall	.-1534   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"****LOCKED!*****");
     752:	47 e7       	ldi	r20, 0x77	; 119
     754:	50 e0       	ldi	r21, 0x00	; 0
     756:	60 e0       	ldi	r22, 0x00	; 0
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	fc dc       	rcall	.-1544   	; 0x154 <LCD_String_xy>
				PORTB |= 1<<PINB1;
     75c:	c1 9a       	sbi	0x18, 1	; 24
				confirm=1;
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <confirm>
				break;
     764:	ce cd       	rjmp	.-1124   	; 0x302 <main+0x100>
				case 3:
				LCD_String_xy(0,0,"Voted for C");
     766:	46 e2       	ldi	r20, 0x26	; 38
     768:	51 e0       	ldi	r21, 0x01	; 1
     76a:	60 e0       	ldi	r22, 0x00	; 0
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	f2 dc       	rcall	.-1564   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"Confirm? Yes/No");
     770:	40 ee       	ldi	r20, 0xE0	; 224
     772:	50 e0       	ldi	r21, 0x00	; 0
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	ed dc       	rcall	.-1574   	; 0x154 <LCD_String_xy>
				pressed=0;
     77a:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
						}
					}
					else if(bit_is_clear(PINC,4))
					{
						p++;
						if(p>threshold)
     77e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     782:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
				LCD_String_xy(0,0,"Voted for C");
				LCD_String_xy(1,0,"Confirm? Yes/No");
				pressed=0;
				while(1)
				{
					if(bit_is_clear(PINC,5))
     786:	9d 99       	sbic	0x13, 5	; 19
     788:	35 c0       	rjmp	.+106    	; 0x7f4 <__stack+0x395>
					{
						p++;
     78a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     78e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     798:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     79c:	28 17       	cp	r18, r24
     79e:	39 07       	cpc	r19, r25
     7a0:	94 f7       	brge	.-28     	; 0x786 <__stack+0x327>
						{
							if(pressed ==0)
     7a2:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     7a6:	81 11       	cpse	r24, r1
     7a8:	20 c0       	rjmp	.+64     	; 0x7ea <__stack+0x38b>
							{
								LCD_Clear();
     7aa:	ed dc       	rcall	.-1574   	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"You voted for");
     7ac:	40 ef       	ldi	r20, 0xF0	; 240
     7ae:	50 e0       	ldi	r21, 0x00	; 0
     7b0:	60 e0       	ldi	r22, 0x00	; 0
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	cf dc       	rcall	.-1634   	; 0x154 <LCD_String_xy>
								LCD_String_xy(1,0,"Mr.C!!");
     7b6:	42 e3       	ldi	r20, 0x32	; 50
     7b8:	51 e0       	ldi	r21, 0x01	; 1
     7ba:	60 e0       	ldi	r22, 0x00	; 0
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	ca dc       	rcall	.-1644   	; 0x154 <LCD_String_xy>
								pressed =25;
     7c0:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								k++;
     7c4:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <k>
     7c8:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <k+0x1>
     7cc:	01 96       	adiw	r24, 0x01	; 1
     7ce:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <k+0x1>
     7d2:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <k>
     7d6:	2f ef       	ldi	r18, 0xFF	; 255
     7d8:	83 ed       	ldi	r24, 0xD3	; 211
     7da:	90 e3       	ldi	r25, 0x30	; 48
     7dc:	21 50       	subi	r18, 0x01	; 1
     7de:	80 40       	sbci	r24, 0x00	; 0
     7e0:	90 40       	sbci	r25, 0x00	; 0
     7e2:	e1 f7       	brne	.-8      	; 0x7dc <__stack+0x37d>
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <__stack+0x387>
     7e6:	00 00       	nop
     7e8:	46 c0       	rjmp	.+140    	; 0x876 <__stack+0x417>
								_delay_ms(2000);
								break;
							}
							p=0;
     7ea:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     7ee:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     7f2:	c9 cf       	rjmp	.-110    	; 0x786 <__stack+0x327>
						}
					}
					else if(bit_is_clear(PINC,4))
     7f4:	9c 99       	sbic	0x13, 4	; 19
     7f6:	2b c0       	rjmp	.+86     	; 0x84e <__stack+0x3ef>
					{
						p++;
     7f8:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     7fc:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     806:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     80a:	28 17       	cp	r18, r24
     80c:	39 07       	cpc	r19, r25
     80e:	0c f0       	brlt	.+2      	; 0x812 <__stack+0x3b3>
     810:	ba cf       	rjmp	.-140    	; 0x786 <__stack+0x327>
						{
							if(pressed ==0)
     812:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     816:	81 11       	cpse	r24, r1
     818:	15 c0       	rjmp	.+42     	; 0x844 <__stack+0x3e5>
							{
								LCD_Clear();
     81a:	b5 dc       	rcall	.-1686   	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"Try again...");
     81c:	45 e0       	ldi	r20, 0x05	; 5
     81e:	51 e0       	ldi	r21, 0x01	; 1
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	97 dc       	rcall	.-1746   	; 0x154 <LCD_String_xy>
								pressed =25;
     826:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								try =1;
     82a:	81 e0       	ldi	r24, 0x01	; 1
     82c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <try>
     830:	2f ef       	ldi	r18, 0xFF	; 255
     832:	83 ed       	ldi	r24, 0xD3	; 211
     834:	90 e3       	ldi	r25, 0x30	; 48
     836:	21 50       	subi	r18, 0x01	; 1
     838:	80 40       	sbci	r24, 0x00	; 0
     83a:	90 40       	sbci	r25, 0x00	; 0
     83c:	e1 f7       	brne	.-8      	; 0x836 <__stack+0x3d7>
     83e:	00 c0       	rjmp	.+0      	; 0x840 <__stack+0x3e1>
     840:	00 00       	nop
     842:	19 c0       	rjmp	.+50     	; 0x876 <__stack+0x417>
								_delay_ms(2000);
								break;
							}
							p=0;
     844:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     848:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     84c:	9c cf       	rjmp	.-200    	; 0x786 <__stack+0x327>
						}
					}
					else
					{
						r++;
     84e:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <r>
     852:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <r+0x1>
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <r+0x1>
     85c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <r>
						if(r>threshold)
     860:	28 17       	cp	r18, r24
     862:	39 07       	cpc	r19, r25
     864:	0c f0       	brlt	.+2      	; 0x868 <__stack+0x409>
     866:	8f cf       	rjmp	.-226    	; 0x786 <__stack+0x327>
						{
							pressed=0;
     868:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
							r=0;
     86c:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <r+0x1>
     870:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <r>
     874:	88 cf       	rjmp	.-240    	; 0x786 <__stack+0x327>
						}
						
					}
				}
				LCD_Clear();
     876:	87 dc       	rcall	.-1778   	; 0x186 <LCD_Clear>
				if(try)
     878:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <try>
     87c:	88 23       	and	r24, r24
     87e:	b9 f0       	breq	.+46     	; 0x8ae <__stack+0x44f>
				{
					LCD_String_xy(0,0,"A:");
     880:	4a ea       	ldi	r20, 0xAA	; 170
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	80 e0       	ldi	r24, 0x00	; 0
     888:	65 dc       	rcall	.-1846   	; 0x154 <LCD_String_xy>
					LCD_String_xy(0,8,"B:");
     88a:	4d ea       	ldi	r20, 0xAD	; 173
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	68 e0       	ldi	r22, 0x08	; 8
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	60 dc       	rcall	.-1856   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,0,"C:");
     894:	40 eb       	ldi	r20, 0xB0	; 176
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	5b dc       	rcall	.-1866   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,8,"D:");
     89e:	43 eb       	ldi	r20, 0xB3	; 179
     8a0:	50 e0       	ldi	r21, 0x00	; 0
     8a2:	68 e0       	ldi	r22, 0x08	; 8
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	56 dc       	rcall	.-1876   	; 0x154 <LCD_String_xy>
					try =0;
     8a8:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <try>
					break;
     8ac:	2a cd       	rjmp	.-1452   	; 0x302 <main+0x100>
				}
				LCD_String_xy(0,0,"*****EVM is*****");
     8ae:	46 e6       	ldi	r20, 0x66	; 102
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	4e dc       	rcall	.-1892   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"****LOCKED!*****");
     8b8:	47 e7       	ldi	r20, 0x77	; 119
     8ba:	50 e0       	ldi	r21, 0x00	; 0
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	49 dc       	rcall	.-1902   	; 0x154 <LCD_String_xy>
				PORTB |= 1<<PINB1;
     8c2:	c1 9a       	sbi	0x18, 1	; 24
				confirm=1;
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <confirm>
				break;
     8ca:	1b cd       	rjmp	.-1482   	; 0x302 <main+0x100>
				case 4:
				LCD_String_xy(0,0,"Voted for D");
     8cc:	49 e3       	ldi	r20, 0x39	; 57
     8ce:	51 e0       	ldi	r21, 0x01	; 1
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	3f dc       	rcall	.-1922   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"Confirm? Yes/No");
     8d6:	40 ee       	ldi	r20, 0xE0	; 224
     8d8:	50 e0       	ldi	r21, 0x00	; 0
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	3a dc       	rcall	.-1932   	; 0x154 <LCD_String_xy>
				pressed=0;
     8e0:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
						}
					}
					else if(bit_is_clear(PINC,4))
					{
						p++;
						if(p>threshold)
     8e4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     8e8:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
				LCD_String_xy(0,0,"Voted for D");
				LCD_String_xy(1,0,"Confirm? Yes/No");
				pressed=0;
				while(1)
				{
					if(bit_is_clear(PINC,5))
     8ec:	9d 99       	sbic	0x13, 5	; 19
     8ee:	35 c0       	rjmp	.+106    	; 0x95a <__stack+0x4fb>
					{
						p++;
     8f0:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     8f4:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     8f8:	01 96       	adiw	r24, 0x01	; 1
     8fa:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     8fe:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     902:	28 17       	cp	r18, r24
     904:	39 07       	cpc	r19, r25
     906:	94 f7       	brge	.-28     	; 0x8ec <__stack+0x48d>
						{
							if(pressed ==0)
     908:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     90c:	81 11       	cpse	r24, r1
     90e:	20 c0       	rjmp	.+64     	; 0x950 <__stack+0x4f1>
							{
								LCD_Clear();
     910:	3a dc       	rcall	.-1932   	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"You voted for");
     912:	40 ef       	ldi	r20, 0xF0	; 240
     914:	50 e0       	ldi	r21, 0x00	; 0
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	1c dc       	rcall	.-1992   	; 0x154 <LCD_String_xy>
								LCD_String_xy(1,0,"Mr.D!!");
     91c:	45 e4       	ldi	r20, 0x45	; 69
     91e:	51 e0       	ldi	r21, 0x01	; 1
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	17 dc       	rcall	.-2002   	; 0x154 <LCD_String_xy>
								pressed =25;
     926:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								l++;
     92a:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__data_end>
     92e:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__data_end+0x1>
     932:	01 96       	adiw	r24, 0x01	; 1
     934:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <__data_end+0x1>
     938:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <__data_end>
     93c:	2f ef       	ldi	r18, 0xFF	; 255
     93e:	83 ed       	ldi	r24, 0xD3	; 211
     940:	90 e3       	ldi	r25, 0x30	; 48
     942:	21 50       	subi	r18, 0x01	; 1
     944:	80 40       	sbci	r24, 0x00	; 0
     946:	90 40       	sbci	r25, 0x00	; 0
     948:	e1 f7       	brne	.-8      	; 0x942 <__stack+0x4e3>
     94a:	00 c0       	rjmp	.+0      	; 0x94c <__stack+0x4ed>
     94c:	00 00       	nop
     94e:	46 c0       	rjmp	.+140    	; 0x9dc <__stack+0x57d>
								_delay_ms(2000);
								break;
							}
							p=0;
     950:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     954:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     958:	c9 cf       	rjmp	.-110    	; 0x8ec <__stack+0x48d>
						}
					}
					else if(bit_is_clear(PINC,4))
     95a:	9c 99       	sbic	0x13, 4	; 19
     95c:	2b c0       	rjmp	.+86     	; 0x9b4 <__stack+0x555>
					{
						p++;
     95e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <p>
     962:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <p+0x1>
     966:	01 96       	adiw	r24, 0x01	; 1
     968:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <p+0x1>
     96c:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <p>
						if(p>threshold)
     970:	28 17       	cp	r18, r24
     972:	39 07       	cpc	r19, r25
     974:	0c f0       	brlt	.+2      	; 0x978 <__stack+0x519>
     976:	ba cf       	rjmp	.-140    	; 0x8ec <__stack+0x48d>
						{
							if(pressed ==0)
     978:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <pressed>
     97c:	81 11       	cpse	r24, r1
     97e:	15 c0       	rjmp	.+42     	; 0x9aa <__stack+0x54b>
							{
								LCD_Clear();
     980:	02 dc       	rcall	.-2044   	; 0x186 <LCD_Clear>
								LCD_String_xy(0,0,"Try again...");
     982:	45 e0       	ldi	r20, 0x05	; 5
     984:	51 e0       	ldi	r21, 0x01	; 1
     986:	60 e0       	ldi	r22, 0x00	; 0
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	e4 db       	rcall	.-2104   	; 0x154 <LCD_String_xy>
								pressed =25;
     98c:	c0 93 59 01 	sts	0x0159, r28	; 0x800159 <pressed>
								try =1;
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <try>
     996:	2f ef       	ldi	r18, 0xFF	; 255
     998:	83 ed       	ldi	r24, 0xD3	; 211
     99a:	90 e3       	ldi	r25, 0x30	; 48
     99c:	21 50       	subi	r18, 0x01	; 1
     99e:	80 40       	sbci	r24, 0x00	; 0
     9a0:	90 40       	sbci	r25, 0x00	; 0
     9a2:	e1 f7       	brne	.-8      	; 0x99c <__stack+0x53d>
     9a4:	00 c0       	rjmp	.+0      	; 0x9a6 <__stack+0x547>
     9a6:	00 00       	nop
     9a8:	19 c0       	rjmp	.+50     	; 0x9dc <__stack+0x57d>
								_delay_ms(2000);
								break;
							}
							p=0;
     9aa:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <p+0x1>
     9ae:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <p>
     9b2:	9c cf       	rjmp	.-200    	; 0x8ec <__stack+0x48d>
						}
					}
					else
					{
						r++;
     9b4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <r>
     9b8:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <r+0x1>
     9bc:	01 96       	adiw	r24, 0x01	; 1
     9be:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <r+0x1>
     9c2:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <r>
						if(r>threshold)
     9c6:	28 17       	cp	r18, r24
     9c8:	39 07       	cpc	r19, r25
     9ca:	0c f0       	brlt	.+2      	; 0x9ce <__stack+0x56f>
     9cc:	8f cf       	rjmp	.-226    	; 0x8ec <__stack+0x48d>
						{
							pressed=0;
     9ce:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <pressed>
							r=0;
     9d2:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <r+0x1>
     9d6:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <r>
     9da:	88 cf       	rjmp	.-240    	; 0x8ec <__stack+0x48d>
						}
										
					}
				}
				LCD_Clear();
     9dc:	d4 db       	rcall	.-2136   	; 0x186 <LCD_Clear>
				if(try)
     9de:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <try>
     9e2:	88 23       	and	r24, r24
     9e4:	b9 f0       	breq	.+46     	; 0xa14 <__stack+0x5b5>
				{
					LCD_String_xy(0,0,"A:");
     9e6:	4a ea       	ldi	r20, 0xAA	; 170
     9e8:	50 e0       	ldi	r21, 0x00	; 0
     9ea:	60 e0       	ldi	r22, 0x00	; 0
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	b2 db       	rcall	.-2204   	; 0x154 <LCD_String_xy>
					LCD_String_xy(0,8,"B:");
     9f0:	4d ea       	ldi	r20, 0xAD	; 173
     9f2:	50 e0       	ldi	r21, 0x00	; 0
     9f4:	68 e0       	ldi	r22, 0x08	; 8
     9f6:	80 e0       	ldi	r24, 0x00	; 0
     9f8:	ad db       	rcall	.-2214   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,0,"C:");
     9fa:	40 eb       	ldi	r20, 0xB0	; 176
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	a8 db       	rcall	.-2224   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,8,"D:");
     a04:	43 eb       	ldi	r20, 0xB3	; 179
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	68 e0       	ldi	r22, 0x08	; 8
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	a3 db       	rcall	.-2234   	; 0x154 <LCD_String_xy>
					try =0;
     a0e:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <try>
					break;
     a12:	77 cc       	rjmp	.-1810   	; 0x302 <main+0x100>
				}
				LCD_String_xy(0,0,"*****EVM is*****");
     a14:	46 e6       	ldi	r20, 0x66	; 102
     a16:	50 e0       	ldi	r21, 0x00	; 0
     a18:	60 e0       	ldi	r22, 0x00	; 0
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	9b db       	rcall	.-2250   	; 0x154 <LCD_String_xy>
				LCD_String_xy(1,0,"****LOCKED!*****");
     a1e:	47 e7       	ldi	r20, 0x77	; 119
     a20:	50 e0       	ldi	r21, 0x00	; 0
     a22:	60 e0       	ldi	r22, 0x00	; 0
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	96 db       	rcall	.-2260   	; 0x154 <LCD_String_xy>
				PORTB |= 1<<PINB1;
     a28:	c1 9a       	sbi	0x18, 1	; 24
				confirm=1;
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <confirm>
				break;
     a30:	68 cc       	rjmp	.-1840   	; 0x302 <main+0x100>
			p++;
			if(p>threshold)
			{
				if(pressed ==0)
				{
					LCD_Clear();
     a32:	a9 db       	rcall	.-2222   	; 0x186 <LCD_Clear>
					LCD_String_xy(0,0," ### Voting ### ");
     a34:	46 eb       	ldi	r20, 0xB6	; 182
     a36:	50 e0       	ldi	r21, 0x00	; 0
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	8b db       	rcall	.-2282   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,0," ### Finished ### ");
     a3e:	47 ec       	ldi	r20, 0xC7	; 199
     a40:	50 e0       	ldi	r21, 0x00	; 0
     a42:	60 e0       	ldi	r22, 0x00	; 0
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	86 db       	rcall	.-2292   	; 0x154 <LCD_String_xy>
     a48:	2f ef       	ldi	r18, 0xFF	; 255
     a4a:	83 ed       	ldi	r24, 0xD3	; 211
     a4c:	90 e3       	ldi	r25, 0x30	; 48
     a4e:	21 50       	subi	r18, 0x01	; 1
     a50:	80 40       	sbci	r24, 0x00	; 0
     a52:	90 40       	sbci	r25, 0x00	; 0
     a54:	e1 f7       	brne	.-8      	; 0xa4e <__stack+0x5ef>
     a56:	00 c0       	rjmp	.+0      	; 0xa58 <__stack+0x5f9>
     a58:	00 00       	nop
					_delay_ms(2000);
					LCD_Clear();
     a5a:	95 db       	rcall	.-2262   	; 0x186 <LCD_Clear>
					LCD_String_xy(0,0,"A:");
     a5c:	4a ea       	ldi	r20, 0xAA	; 170
     a5e:	50 e0       	ldi	r21, 0x00	; 0
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	77 db       	rcall	.-2322   	; 0x154 <LCD_String_xy>
					LCD_String_xy(0,8,"B:");
     a66:	4d ea       	ldi	r20, 0xAD	; 173
     a68:	50 e0       	ldi	r21, 0x00	; 0
     a6a:	68 e0       	ldi	r22, 0x08	; 8
     a6c:	80 e0       	ldi	r24, 0x00	; 0
     a6e:	72 db       	rcall	.-2332   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,0,"C:");
     a70:	40 eb       	ldi	r20, 0xB0	; 176
     a72:	50 e0       	ldi	r21, 0x00	; 0
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	6d db       	rcall	.-2342   	; 0x154 <LCD_String_xy>
					LCD_String_xy(1,8,"D:");
     a7a:	43 eb       	ldi	r20, 0xB3	; 179
     a7c:	50 e0       	ldi	r21, 0x00	; 0
     a7e:	68 e0       	ldi	r22, 0x08	; 8
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	68 db       	rcall	.-2352   	; 0x154 <LCD_String_xy>
					LCD_Decimal_xy(0,3,i);
     a84:	40 91 52 01 	lds	r20, 0x0152	; 0x800152 <i>
     a88:	63 e0       	ldi	r22, 0x03	; 3
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	87 db       	rcall	.-2290   	; 0x19c <LCD_Decimal_xy>
					LCD_Decimal_xy(0,11,j);
     a8e:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <j>
     a92:	6b e0       	ldi	r22, 0x0B	; 11
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	82 db       	rcall	.-2300   	; 0x19c <LCD_Decimal_xy>
					LCD_Decimal_xy(1,3,k);
     a98:	40 91 4e 01 	lds	r20, 0x014E	; 0x80014e <k>
     a9c:	63 e0       	ldi	r22, 0x03	; 3
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	7d db       	rcall	.-2310   	; 0x19c <LCD_Decimal_xy>
					LCD_Decimal_xy(1,11,l);			
     aa2:	40 91 4c 01 	lds	r20, 0x014C	; 0x80014c <__data_end>
     aa6:	6b e0       	ldi	r22, 0x0B	; 11
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	78 db       	rcall	.-2320   	; 0x19c <LCD_Decimal_xy>
		}
		//pressed=0;
		
		
    }
}
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	08 95       	ret

00000aba <sprintf>:
     aba:	ae e0       	ldi	r26, 0x0E	; 14
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	e2 e6       	ldi	r30, 0x62	; 98
     ac0:	f5 e0       	ldi	r31, 0x05	; 5
     ac2:	aa c2       	rjmp	.+1364   	; 0x1018 <__prologue_saves__+0x1c>
     ac4:	0d 89       	ldd	r16, Y+21	; 0x15
     ac6:	1e 89       	ldd	r17, Y+22	; 0x16
     ac8:	86 e0       	ldi	r24, 0x06	; 6
     aca:	8c 83       	std	Y+4, r24	; 0x04
     acc:	1a 83       	std	Y+2, r17	; 0x02
     ace:	09 83       	std	Y+1, r16	; 0x01
     ad0:	8f ef       	ldi	r24, 0xFF	; 255
     ad2:	9f e7       	ldi	r25, 0x7F	; 127
     ad4:	9e 83       	std	Y+6, r25	; 0x06
     ad6:	8d 83       	std	Y+5, r24	; 0x05
     ad8:	ae 01       	movw	r20, r28
     ada:	47 5e       	subi	r20, 0xE7	; 231
     adc:	5f 4f       	sbci	r21, 0xFF	; 255
     ade:	6f 89       	ldd	r22, Y+23	; 0x17
     ae0:	78 8d       	ldd	r23, Y+24	; 0x18
     ae2:	ce 01       	movw	r24, r28
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	08 d0       	rcall	.+16     	; 0xaf8 <vfprintf>
     ae8:	ef 81       	ldd	r30, Y+7	; 0x07
     aea:	f8 85       	ldd	r31, Y+8	; 0x08
     aec:	e0 0f       	add	r30, r16
     aee:	f1 1f       	adc	r31, r17
     af0:	10 82       	st	Z, r1
     af2:	2e 96       	adiw	r28, 0x0e	; 14
     af4:	e4 e0       	ldi	r30, 0x04	; 4
     af6:	ac c2       	rjmp	.+1368   	; 0x1050 <__epilogue_restores__+0x1c>

00000af8 <vfprintf>:
     af8:	ab e0       	ldi	r26, 0x0B	; 11
     afa:	b0 e0       	ldi	r27, 0x00	; 0
     afc:	e1 e8       	ldi	r30, 0x81	; 129
     afe:	f5 e0       	ldi	r31, 0x05	; 5
     b00:	7d c2       	rjmp	.+1274   	; 0xffc <__prologue_saves__>
     b02:	6c 01       	movw	r12, r24
     b04:	7b 01       	movw	r14, r22
     b06:	8a 01       	movw	r16, r20
     b08:	fc 01       	movw	r30, r24
     b0a:	17 82       	std	Z+7, r1	; 0x07
     b0c:	16 82       	std	Z+6, r1	; 0x06
     b0e:	83 81       	ldd	r24, Z+3	; 0x03
     b10:	81 ff       	sbrs	r24, 1
     b12:	bf c1       	rjmp	.+894    	; 0xe92 <vfprintf+0x39a>
     b14:	ce 01       	movw	r24, r28
     b16:	01 96       	adiw	r24, 0x01	; 1
     b18:	3c 01       	movw	r6, r24
     b1a:	f6 01       	movw	r30, r12
     b1c:	93 81       	ldd	r25, Z+3	; 0x03
     b1e:	f7 01       	movw	r30, r14
     b20:	93 fd       	sbrc	r25, 3
     b22:	85 91       	lpm	r24, Z+
     b24:	93 ff       	sbrs	r25, 3
     b26:	81 91       	ld	r24, Z+
     b28:	7f 01       	movw	r14, r30
     b2a:	88 23       	and	r24, r24
     b2c:	09 f4       	brne	.+2      	; 0xb30 <vfprintf+0x38>
     b2e:	ad c1       	rjmp	.+858    	; 0xe8a <vfprintf+0x392>
     b30:	85 32       	cpi	r24, 0x25	; 37
     b32:	39 f4       	brne	.+14     	; 0xb42 <vfprintf+0x4a>
     b34:	93 fd       	sbrc	r25, 3
     b36:	85 91       	lpm	r24, Z+
     b38:	93 ff       	sbrs	r25, 3
     b3a:	81 91       	ld	r24, Z+
     b3c:	7f 01       	movw	r14, r30
     b3e:	85 32       	cpi	r24, 0x25	; 37
     b40:	21 f4       	brne	.+8      	; 0xb4a <vfprintf+0x52>
     b42:	b6 01       	movw	r22, r12
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	c0 d1       	rcall	.+896    	; 0xec8 <fputc>
     b48:	e8 cf       	rjmp	.-48     	; 0xb1a <vfprintf+0x22>
     b4a:	91 2c       	mov	r9, r1
     b4c:	21 2c       	mov	r2, r1
     b4e:	31 2c       	mov	r3, r1
     b50:	ff e1       	ldi	r31, 0x1F	; 31
     b52:	f3 15       	cp	r31, r3
     b54:	d8 f0       	brcs	.+54     	; 0xb8c <vfprintf+0x94>
     b56:	8b 32       	cpi	r24, 0x2B	; 43
     b58:	79 f0       	breq	.+30     	; 0xb78 <vfprintf+0x80>
     b5a:	38 f4       	brcc	.+14     	; 0xb6a <vfprintf+0x72>
     b5c:	80 32       	cpi	r24, 0x20	; 32
     b5e:	79 f0       	breq	.+30     	; 0xb7e <vfprintf+0x86>
     b60:	83 32       	cpi	r24, 0x23	; 35
     b62:	a1 f4       	brne	.+40     	; 0xb8c <vfprintf+0x94>
     b64:	23 2d       	mov	r18, r3
     b66:	20 61       	ori	r18, 0x10	; 16
     b68:	1d c0       	rjmp	.+58     	; 0xba4 <vfprintf+0xac>
     b6a:	8d 32       	cpi	r24, 0x2D	; 45
     b6c:	61 f0       	breq	.+24     	; 0xb86 <vfprintf+0x8e>
     b6e:	80 33       	cpi	r24, 0x30	; 48
     b70:	69 f4       	brne	.+26     	; 0xb8c <vfprintf+0x94>
     b72:	23 2d       	mov	r18, r3
     b74:	21 60       	ori	r18, 0x01	; 1
     b76:	16 c0       	rjmp	.+44     	; 0xba4 <vfprintf+0xac>
     b78:	83 2d       	mov	r24, r3
     b7a:	82 60       	ori	r24, 0x02	; 2
     b7c:	38 2e       	mov	r3, r24
     b7e:	e3 2d       	mov	r30, r3
     b80:	e4 60       	ori	r30, 0x04	; 4
     b82:	3e 2e       	mov	r3, r30
     b84:	2a c0       	rjmp	.+84     	; 0xbda <vfprintf+0xe2>
     b86:	f3 2d       	mov	r31, r3
     b88:	f8 60       	ori	r31, 0x08	; 8
     b8a:	1d c0       	rjmp	.+58     	; 0xbc6 <vfprintf+0xce>
     b8c:	37 fc       	sbrc	r3, 7
     b8e:	2d c0       	rjmp	.+90     	; 0xbea <vfprintf+0xf2>
     b90:	20 ed       	ldi	r18, 0xD0	; 208
     b92:	28 0f       	add	r18, r24
     b94:	2a 30       	cpi	r18, 0x0A	; 10
     b96:	40 f0       	brcs	.+16     	; 0xba8 <vfprintf+0xb0>
     b98:	8e 32       	cpi	r24, 0x2E	; 46
     b9a:	b9 f4       	brne	.+46     	; 0xbca <vfprintf+0xd2>
     b9c:	36 fc       	sbrc	r3, 6
     b9e:	75 c1       	rjmp	.+746    	; 0xe8a <vfprintf+0x392>
     ba0:	23 2d       	mov	r18, r3
     ba2:	20 64       	ori	r18, 0x40	; 64
     ba4:	32 2e       	mov	r3, r18
     ba6:	19 c0       	rjmp	.+50     	; 0xbda <vfprintf+0xe2>
     ba8:	36 fe       	sbrs	r3, 6
     baa:	06 c0       	rjmp	.+12     	; 0xbb8 <vfprintf+0xc0>
     bac:	8a e0       	ldi	r24, 0x0A	; 10
     bae:	98 9e       	mul	r9, r24
     bb0:	20 0d       	add	r18, r0
     bb2:	11 24       	eor	r1, r1
     bb4:	92 2e       	mov	r9, r18
     bb6:	11 c0       	rjmp	.+34     	; 0xbda <vfprintf+0xe2>
     bb8:	ea e0       	ldi	r30, 0x0A	; 10
     bba:	2e 9e       	mul	r2, r30
     bbc:	20 0d       	add	r18, r0
     bbe:	11 24       	eor	r1, r1
     bc0:	22 2e       	mov	r2, r18
     bc2:	f3 2d       	mov	r31, r3
     bc4:	f0 62       	ori	r31, 0x20	; 32
     bc6:	3f 2e       	mov	r3, r31
     bc8:	08 c0       	rjmp	.+16     	; 0xbda <vfprintf+0xe2>
     bca:	8c 36       	cpi	r24, 0x6C	; 108
     bcc:	21 f4       	brne	.+8      	; 0xbd6 <vfprintf+0xde>
     bce:	83 2d       	mov	r24, r3
     bd0:	80 68       	ori	r24, 0x80	; 128
     bd2:	38 2e       	mov	r3, r24
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0xe2>
     bd6:	88 36       	cpi	r24, 0x68	; 104
     bd8:	41 f4       	brne	.+16     	; 0xbea <vfprintf+0xf2>
     bda:	f7 01       	movw	r30, r14
     bdc:	93 fd       	sbrc	r25, 3
     bde:	85 91       	lpm	r24, Z+
     be0:	93 ff       	sbrs	r25, 3
     be2:	81 91       	ld	r24, Z+
     be4:	7f 01       	movw	r14, r30
     be6:	81 11       	cpse	r24, r1
     be8:	b3 cf       	rjmp	.-154    	; 0xb50 <vfprintf+0x58>
     bea:	98 2f       	mov	r25, r24
     bec:	9f 7d       	andi	r25, 0xDF	; 223
     bee:	95 54       	subi	r25, 0x45	; 69
     bf0:	93 30       	cpi	r25, 0x03	; 3
     bf2:	28 f4       	brcc	.+10     	; 0xbfe <vfprintf+0x106>
     bf4:	0c 5f       	subi	r16, 0xFC	; 252
     bf6:	1f 4f       	sbci	r17, 0xFF	; 255
     bf8:	9f e3       	ldi	r25, 0x3F	; 63
     bfa:	99 83       	std	Y+1, r25	; 0x01
     bfc:	0d c0       	rjmp	.+26     	; 0xc18 <vfprintf+0x120>
     bfe:	83 36       	cpi	r24, 0x63	; 99
     c00:	31 f0       	breq	.+12     	; 0xc0e <vfprintf+0x116>
     c02:	83 37       	cpi	r24, 0x73	; 115
     c04:	71 f0       	breq	.+28     	; 0xc22 <vfprintf+0x12a>
     c06:	83 35       	cpi	r24, 0x53	; 83
     c08:	09 f0       	breq	.+2      	; 0xc0c <vfprintf+0x114>
     c0a:	55 c0       	rjmp	.+170    	; 0xcb6 <vfprintf+0x1be>
     c0c:	20 c0       	rjmp	.+64     	; 0xc4e <vfprintf+0x156>
     c0e:	f8 01       	movw	r30, r16
     c10:	80 81       	ld	r24, Z
     c12:	89 83       	std	Y+1, r24	; 0x01
     c14:	0e 5f       	subi	r16, 0xFE	; 254
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	88 24       	eor	r8, r8
     c1a:	83 94       	inc	r8
     c1c:	91 2c       	mov	r9, r1
     c1e:	53 01       	movw	r10, r6
     c20:	12 c0       	rjmp	.+36     	; 0xc46 <vfprintf+0x14e>
     c22:	28 01       	movw	r4, r16
     c24:	f2 e0       	ldi	r31, 0x02	; 2
     c26:	4f 0e       	add	r4, r31
     c28:	51 1c       	adc	r5, r1
     c2a:	f8 01       	movw	r30, r16
     c2c:	a0 80       	ld	r10, Z
     c2e:	b1 80       	ldd	r11, Z+1	; 0x01
     c30:	36 fe       	sbrs	r3, 6
     c32:	03 c0       	rjmp	.+6      	; 0xc3a <vfprintf+0x142>
     c34:	69 2d       	mov	r22, r9
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x146>
     c3a:	6f ef       	ldi	r22, 0xFF	; 255
     c3c:	7f ef       	ldi	r23, 0xFF	; 255
     c3e:	c5 01       	movw	r24, r10
     c40:	38 d1       	rcall	.+624    	; 0xeb2 <strnlen>
     c42:	4c 01       	movw	r8, r24
     c44:	82 01       	movw	r16, r4
     c46:	f3 2d       	mov	r31, r3
     c48:	ff 77       	andi	r31, 0x7F	; 127
     c4a:	3f 2e       	mov	r3, r31
     c4c:	15 c0       	rjmp	.+42     	; 0xc78 <vfprintf+0x180>
     c4e:	28 01       	movw	r4, r16
     c50:	22 e0       	ldi	r18, 0x02	; 2
     c52:	42 0e       	add	r4, r18
     c54:	51 1c       	adc	r5, r1
     c56:	f8 01       	movw	r30, r16
     c58:	a0 80       	ld	r10, Z
     c5a:	b1 80       	ldd	r11, Z+1	; 0x01
     c5c:	36 fe       	sbrs	r3, 6
     c5e:	03 c0       	rjmp	.+6      	; 0xc66 <vfprintf+0x16e>
     c60:	69 2d       	mov	r22, r9
     c62:	70 e0       	ldi	r23, 0x00	; 0
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <vfprintf+0x172>
     c66:	6f ef       	ldi	r22, 0xFF	; 255
     c68:	7f ef       	ldi	r23, 0xFF	; 255
     c6a:	c5 01       	movw	r24, r10
     c6c:	17 d1       	rcall	.+558    	; 0xe9c <strnlen_P>
     c6e:	4c 01       	movw	r8, r24
     c70:	f3 2d       	mov	r31, r3
     c72:	f0 68       	ori	r31, 0x80	; 128
     c74:	3f 2e       	mov	r3, r31
     c76:	82 01       	movw	r16, r4
     c78:	33 fc       	sbrc	r3, 3
     c7a:	19 c0       	rjmp	.+50     	; 0xcae <vfprintf+0x1b6>
     c7c:	82 2d       	mov	r24, r2
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	88 16       	cp	r8, r24
     c82:	99 06       	cpc	r9, r25
     c84:	a0 f4       	brcc	.+40     	; 0xcae <vfprintf+0x1b6>
     c86:	b6 01       	movw	r22, r12
     c88:	80 e2       	ldi	r24, 0x20	; 32
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	1d d1       	rcall	.+570    	; 0xec8 <fputc>
     c8e:	2a 94       	dec	r2
     c90:	f5 cf       	rjmp	.-22     	; 0xc7c <vfprintf+0x184>
     c92:	f5 01       	movw	r30, r10
     c94:	37 fc       	sbrc	r3, 7
     c96:	85 91       	lpm	r24, Z+
     c98:	37 fe       	sbrs	r3, 7
     c9a:	81 91       	ld	r24, Z+
     c9c:	5f 01       	movw	r10, r30
     c9e:	b6 01       	movw	r22, r12
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	12 d1       	rcall	.+548    	; 0xec8 <fputc>
     ca4:	21 10       	cpse	r2, r1
     ca6:	2a 94       	dec	r2
     ca8:	21 e0       	ldi	r18, 0x01	; 1
     caa:	82 1a       	sub	r8, r18
     cac:	91 08       	sbc	r9, r1
     cae:	81 14       	cp	r8, r1
     cb0:	91 04       	cpc	r9, r1
     cb2:	79 f7       	brne	.-34     	; 0xc92 <vfprintf+0x19a>
     cb4:	e1 c0       	rjmp	.+450    	; 0xe78 <vfprintf+0x380>
     cb6:	84 36       	cpi	r24, 0x64	; 100
     cb8:	11 f0       	breq	.+4      	; 0xcbe <vfprintf+0x1c6>
     cba:	89 36       	cpi	r24, 0x69	; 105
     cbc:	39 f5       	brne	.+78     	; 0xd0c <vfprintf+0x214>
     cbe:	f8 01       	movw	r30, r16
     cc0:	37 fe       	sbrs	r3, 7
     cc2:	07 c0       	rjmp	.+14     	; 0xcd2 <vfprintf+0x1da>
     cc4:	60 81       	ld	r22, Z
     cc6:	71 81       	ldd	r23, Z+1	; 0x01
     cc8:	82 81       	ldd	r24, Z+2	; 0x02
     cca:	93 81       	ldd	r25, Z+3	; 0x03
     ccc:	0c 5f       	subi	r16, 0xFC	; 252
     cce:	1f 4f       	sbci	r17, 0xFF	; 255
     cd0:	08 c0       	rjmp	.+16     	; 0xce2 <vfprintf+0x1ea>
     cd2:	60 81       	ld	r22, Z
     cd4:	71 81       	ldd	r23, Z+1	; 0x01
     cd6:	07 2e       	mov	r0, r23
     cd8:	00 0c       	add	r0, r0
     cda:	88 0b       	sbc	r24, r24
     cdc:	99 0b       	sbc	r25, r25
     cde:	0e 5f       	subi	r16, 0xFE	; 254
     ce0:	1f 4f       	sbci	r17, 0xFF	; 255
     ce2:	f3 2d       	mov	r31, r3
     ce4:	ff 76       	andi	r31, 0x6F	; 111
     ce6:	3f 2e       	mov	r3, r31
     ce8:	97 ff       	sbrs	r25, 7
     cea:	09 c0       	rjmp	.+18     	; 0xcfe <vfprintf+0x206>
     cec:	90 95       	com	r25
     cee:	80 95       	com	r24
     cf0:	70 95       	com	r23
     cf2:	61 95       	neg	r22
     cf4:	7f 4f       	sbci	r23, 0xFF	; 255
     cf6:	8f 4f       	sbci	r24, 0xFF	; 255
     cf8:	9f 4f       	sbci	r25, 0xFF	; 255
     cfa:	f0 68       	ori	r31, 0x80	; 128
     cfc:	3f 2e       	mov	r3, r31
     cfe:	2a e0       	ldi	r18, 0x0A	; 10
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	a3 01       	movw	r20, r6
     d04:	1d d1       	rcall	.+570    	; 0xf40 <__ultoa_invert>
     d06:	88 2e       	mov	r8, r24
     d08:	86 18       	sub	r8, r6
     d0a:	44 c0       	rjmp	.+136    	; 0xd94 <vfprintf+0x29c>
     d0c:	85 37       	cpi	r24, 0x75	; 117
     d0e:	31 f4       	brne	.+12     	; 0xd1c <vfprintf+0x224>
     d10:	23 2d       	mov	r18, r3
     d12:	2f 7e       	andi	r18, 0xEF	; 239
     d14:	b2 2e       	mov	r11, r18
     d16:	2a e0       	ldi	r18, 0x0A	; 10
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	25 c0       	rjmp	.+74     	; 0xd66 <vfprintf+0x26e>
     d1c:	93 2d       	mov	r25, r3
     d1e:	99 7f       	andi	r25, 0xF9	; 249
     d20:	b9 2e       	mov	r11, r25
     d22:	8f 36       	cpi	r24, 0x6F	; 111
     d24:	c1 f0       	breq	.+48     	; 0xd56 <vfprintf+0x25e>
     d26:	18 f4       	brcc	.+6      	; 0xd2e <vfprintf+0x236>
     d28:	88 35       	cpi	r24, 0x58	; 88
     d2a:	79 f0       	breq	.+30     	; 0xd4a <vfprintf+0x252>
     d2c:	ae c0       	rjmp	.+348    	; 0xe8a <vfprintf+0x392>
     d2e:	80 37       	cpi	r24, 0x70	; 112
     d30:	19 f0       	breq	.+6      	; 0xd38 <vfprintf+0x240>
     d32:	88 37       	cpi	r24, 0x78	; 120
     d34:	21 f0       	breq	.+8      	; 0xd3e <vfprintf+0x246>
     d36:	a9 c0       	rjmp	.+338    	; 0xe8a <vfprintf+0x392>
     d38:	e9 2f       	mov	r30, r25
     d3a:	e0 61       	ori	r30, 0x10	; 16
     d3c:	be 2e       	mov	r11, r30
     d3e:	b4 fe       	sbrs	r11, 4
     d40:	0d c0       	rjmp	.+26     	; 0xd5c <vfprintf+0x264>
     d42:	fb 2d       	mov	r31, r11
     d44:	f4 60       	ori	r31, 0x04	; 4
     d46:	bf 2e       	mov	r11, r31
     d48:	09 c0       	rjmp	.+18     	; 0xd5c <vfprintf+0x264>
     d4a:	34 fe       	sbrs	r3, 4
     d4c:	0a c0       	rjmp	.+20     	; 0xd62 <vfprintf+0x26a>
     d4e:	29 2f       	mov	r18, r25
     d50:	26 60       	ori	r18, 0x06	; 6
     d52:	b2 2e       	mov	r11, r18
     d54:	06 c0       	rjmp	.+12     	; 0xd62 <vfprintf+0x26a>
     d56:	28 e0       	ldi	r18, 0x08	; 8
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	05 c0       	rjmp	.+10     	; 0xd66 <vfprintf+0x26e>
     d5c:	20 e1       	ldi	r18, 0x10	; 16
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	02 c0       	rjmp	.+4      	; 0xd66 <vfprintf+0x26e>
     d62:	20 e1       	ldi	r18, 0x10	; 16
     d64:	32 e0       	ldi	r19, 0x02	; 2
     d66:	f8 01       	movw	r30, r16
     d68:	b7 fe       	sbrs	r11, 7
     d6a:	07 c0       	rjmp	.+14     	; 0xd7a <vfprintf+0x282>
     d6c:	60 81       	ld	r22, Z
     d6e:	71 81       	ldd	r23, Z+1	; 0x01
     d70:	82 81       	ldd	r24, Z+2	; 0x02
     d72:	93 81       	ldd	r25, Z+3	; 0x03
     d74:	0c 5f       	subi	r16, 0xFC	; 252
     d76:	1f 4f       	sbci	r17, 0xFF	; 255
     d78:	06 c0       	rjmp	.+12     	; 0xd86 <vfprintf+0x28e>
     d7a:	60 81       	ld	r22, Z
     d7c:	71 81       	ldd	r23, Z+1	; 0x01
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 5f       	subi	r16, 0xFE	; 254
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
     d86:	a3 01       	movw	r20, r6
     d88:	db d0       	rcall	.+438    	; 0xf40 <__ultoa_invert>
     d8a:	88 2e       	mov	r8, r24
     d8c:	86 18       	sub	r8, r6
     d8e:	fb 2d       	mov	r31, r11
     d90:	ff 77       	andi	r31, 0x7F	; 127
     d92:	3f 2e       	mov	r3, r31
     d94:	36 fe       	sbrs	r3, 6
     d96:	0d c0       	rjmp	.+26     	; 0xdb2 <vfprintf+0x2ba>
     d98:	23 2d       	mov	r18, r3
     d9a:	2e 7f       	andi	r18, 0xFE	; 254
     d9c:	a2 2e       	mov	r10, r18
     d9e:	89 14       	cp	r8, r9
     da0:	58 f4       	brcc	.+22     	; 0xdb8 <vfprintf+0x2c0>
     da2:	34 fe       	sbrs	r3, 4
     da4:	0b c0       	rjmp	.+22     	; 0xdbc <vfprintf+0x2c4>
     da6:	32 fc       	sbrc	r3, 2
     da8:	09 c0       	rjmp	.+18     	; 0xdbc <vfprintf+0x2c4>
     daa:	83 2d       	mov	r24, r3
     dac:	8e 7e       	andi	r24, 0xEE	; 238
     dae:	a8 2e       	mov	r10, r24
     db0:	05 c0       	rjmp	.+10     	; 0xdbc <vfprintf+0x2c4>
     db2:	b8 2c       	mov	r11, r8
     db4:	a3 2c       	mov	r10, r3
     db6:	03 c0       	rjmp	.+6      	; 0xdbe <vfprintf+0x2c6>
     db8:	b8 2c       	mov	r11, r8
     dba:	01 c0       	rjmp	.+2      	; 0xdbe <vfprintf+0x2c6>
     dbc:	b9 2c       	mov	r11, r9
     dbe:	a4 fe       	sbrs	r10, 4
     dc0:	0f c0       	rjmp	.+30     	; 0xde0 <vfprintf+0x2e8>
     dc2:	fe 01       	movw	r30, r28
     dc4:	e8 0d       	add	r30, r8
     dc6:	f1 1d       	adc	r31, r1
     dc8:	80 81       	ld	r24, Z
     dca:	80 33       	cpi	r24, 0x30	; 48
     dcc:	21 f4       	brne	.+8      	; 0xdd6 <vfprintf+0x2de>
     dce:	9a 2d       	mov	r25, r10
     dd0:	99 7e       	andi	r25, 0xE9	; 233
     dd2:	a9 2e       	mov	r10, r25
     dd4:	09 c0       	rjmp	.+18     	; 0xde8 <vfprintf+0x2f0>
     dd6:	a2 fe       	sbrs	r10, 2
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <vfprintf+0x2ee>
     dda:	b3 94       	inc	r11
     ddc:	b3 94       	inc	r11
     dde:	04 c0       	rjmp	.+8      	; 0xde8 <vfprintf+0x2f0>
     de0:	8a 2d       	mov	r24, r10
     de2:	86 78       	andi	r24, 0x86	; 134
     de4:	09 f0       	breq	.+2      	; 0xde8 <vfprintf+0x2f0>
     de6:	b3 94       	inc	r11
     de8:	a3 fc       	sbrc	r10, 3
     dea:	10 c0       	rjmp	.+32     	; 0xe0c <vfprintf+0x314>
     dec:	a0 fe       	sbrs	r10, 0
     dee:	06 c0       	rjmp	.+12     	; 0xdfc <vfprintf+0x304>
     df0:	b2 14       	cp	r11, r2
     df2:	80 f4       	brcc	.+32     	; 0xe14 <vfprintf+0x31c>
     df4:	28 0c       	add	r2, r8
     df6:	92 2c       	mov	r9, r2
     df8:	9b 18       	sub	r9, r11
     dfa:	0d c0       	rjmp	.+26     	; 0xe16 <vfprintf+0x31e>
     dfc:	b2 14       	cp	r11, r2
     dfe:	58 f4       	brcc	.+22     	; 0xe16 <vfprintf+0x31e>
     e00:	b6 01       	movw	r22, r12
     e02:	80 e2       	ldi	r24, 0x20	; 32
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	60 d0       	rcall	.+192    	; 0xec8 <fputc>
     e08:	b3 94       	inc	r11
     e0a:	f8 cf       	rjmp	.-16     	; 0xdfc <vfprintf+0x304>
     e0c:	b2 14       	cp	r11, r2
     e0e:	18 f4       	brcc	.+6      	; 0xe16 <vfprintf+0x31e>
     e10:	2b 18       	sub	r2, r11
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <vfprintf+0x320>
     e14:	98 2c       	mov	r9, r8
     e16:	21 2c       	mov	r2, r1
     e18:	a4 fe       	sbrs	r10, 4
     e1a:	0f c0       	rjmp	.+30     	; 0xe3a <vfprintf+0x342>
     e1c:	b6 01       	movw	r22, r12
     e1e:	80 e3       	ldi	r24, 0x30	; 48
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	52 d0       	rcall	.+164    	; 0xec8 <fputc>
     e24:	a2 fe       	sbrs	r10, 2
     e26:	16 c0       	rjmp	.+44     	; 0xe54 <vfprintf+0x35c>
     e28:	a1 fc       	sbrc	r10, 1
     e2a:	03 c0       	rjmp	.+6      	; 0xe32 <vfprintf+0x33a>
     e2c:	88 e7       	ldi	r24, 0x78	; 120
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <vfprintf+0x33e>
     e32:	88 e5       	ldi	r24, 0x58	; 88
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	b6 01       	movw	r22, r12
     e38:	0c c0       	rjmp	.+24     	; 0xe52 <vfprintf+0x35a>
     e3a:	8a 2d       	mov	r24, r10
     e3c:	86 78       	andi	r24, 0x86	; 134
     e3e:	51 f0       	breq	.+20     	; 0xe54 <vfprintf+0x35c>
     e40:	a1 fe       	sbrs	r10, 1
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <vfprintf+0x350>
     e44:	8b e2       	ldi	r24, 0x2B	; 43
     e46:	01 c0       	rjmp	.+2      	; 0xe4a <vfprintf+0x352>
     e48:	80 e2       	ldi	r24, 0x20	; 32
     e4a:	a7 fc       	sbrc	r10, 7
     e4c:	8d e2       	ldi	r24, 0x2D	; 45
     e4e:	b6 01       	movw	r22, r12
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	3a d0       	rcall	.+116    	; 0xec8 <fputc>
     e54:	89 14       	cp	r8, r9
     e56:	30 f4       	brcc	.+12     	; 0xe64 <vfprintf+0x36c>
     e58:	b6 01       	movw	r22, r12
     e5a:	80 e3       	ldi	r24, 0x30	; 48
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	34 d0       	rcall	.+104    	; 0xec8 <fputc>
     e60:	9a 94       	dec	r9
     e62:	f8 cf       	rjmp	.-16     	; 0xe54 <vfprintf+0x35c>
     e64:	8a 94       	dec	r8
     e66:	f3 01       	movw	r30, r6
     e68:	e8 0d       	add	r30, r8
     e6a:	f1 1d       	adc	r31, r1
     e6c:	80 81       	ld	r24, Z
     e6e:	b6 01       	movw	r22, r12
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	2a d0       	rcall	.+84     	; 0xec8 <fputc>
     e74:	81 10       	cpse	r8, r1
     e76:	f6 cf       	rjmp	.-20     	; 0xe64 <vfprintf+0x36c>
     e78:	22 20       	and	r2, r2
     e7a:	09 f4       	brne	.+2      	; 0xe7e <vfprintf+0x386>
     e7c:	4e ce       	rjmp	.-868    	; 0xb1a <vfprintf+0x22>
     e7e:	b6 01       	movw	r22, r12
     e80:	80 e2       	ldi	r24, 0x20	; 32
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	21 d0       	rcall	.+66     	; 0xec8 <fputc>
     e86:	2a 94       	dec	r2
     e88:	f7 cf       	rjmp	.-18     	; 0xe78 <vfprintf+0x380>
     e8a:	f6 01       	movw	r30, r12
     e8c:	86 81       	ldd	r24, Z+6	; 0x06
     e8e:	97 81       	ldd	r25, Z+7	; 0x07
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <vfprintf+0x39e>
     e92:	8f ef       	ldi	r24, 0xFF	; 255
     e94:	9f ef       	ldi	r25, 0xFF	; 255
     e96:	2b 96       	adiw	r28, 0x0b	; 11
     e98:	e2 e1       	ldi	r30, 0x12	; 18
     e9a:	cc c0       	rjmp	.+408    	; 0x1034 <__epilogue_restores__>

00000e9c <strnlen_P>:
     e9c:	fc 01       	movw	r30, r24
     e9e:	05 90       	lpm	r0, Z+
     ea0:	61 50       	subi	r22, 0x01	; 1
     ea2:	70 40       	sbci	r23, 0x00	; 0
     ea4:	01 10       	cpse	r0, r1
     ea6:	d8 f7       	brcc	.-10     	; 0xe9e <strnlen_P+0x2>
     ea8:	80 95       	com	r24
     eaa:	90 95       	com	r25
     eac:	8e 0f       	add	r24, r30
     eae:	9f 1f       	adc	r25, r31
     eb0:	08 95       	ret

00000eb2 <strnlen>:
     eb2:	fc 01       	movw	r30, r24
     eb4:	61 50       	subi	r22, 0x01	; 1
     eb6:	70 40       	sbci	r23, 0x00	; 0
     eb8:	01 90       	ld	r0, Z+
     eba:	01 10       	cpse	r0, r1
     ebc:	d8 f7       	brcc	.-10     	; 0xeb4 <strnlen+0x2>
     ebe:	80 95       	com	r24
     ec0:	90 95       	com	r25
     ec2:	8e 0f       	add	r24, r30
     ec4:	9f 1f       	adc	r25, r31
     ec6:	08 95       	ret

00000ec8 <fputc>:
     ec8:	0f 93       	push	r16
     eca:	1f 93       	push	r17
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	fb 01       	movw	r30, r22
     ed2:	23 81       	ldd	r18, Z+3	; 0x03
     ed4:	21 fd       	sbrc	r18, 1
     ed6:	03 c0       	rjmp	.+6      	; 0xede <fputc+0x16>
     ed8:	8f ef       	ldi	r24, 0xFF	; 255
     eda:	9f ef       	ldi	r25, 0xFF	; 255
     edc:	2c c0       	rjmp	.+88     	; 0xf36 <fputc+0x6e>
     ede:	22 ff       	sbrs	r18, 2
     ee0:	16 c0       	rjmp	.+44     	; 0xf0e <fputc+0x46>
     ee2:	46 81       	ldd	r20, Z+6	; 0x06
     ee4:	57 81       	ldd	r21, Z+7	; 0x07
     ee6:	24 81       	ldd	r18, Z+4	; 0x04
     ee8:	35 81       	ldd	r19, Z+5	; 0x05
     eea:	42 17       	cp	r20, r18
     eec:	53 07       	cpc	r21, r19
     eee:	44 f4       	brge	.+16     	; 0xf00 <fputc+0x38>
     ef0:	a0 81       	ld	r26, Z
     ef2:	b1 81       	ldd	r27, Z+1	; 0x01
     ef4:	9d 01       	movw	r18, r26
     ef6:	2f 5f       	subi	r18, 0xFF	; 255
     ef8:	3f 4f       	sbci	r19, 0xFF	; 255
     efa:	31 83       	std	Z+1, r19	; 0x01
     efc:	20 83       	st	Z, r18
     efe:	8c 93       	st	X, r24
     f00:	26 81       	ldd	r18, Z+6	; 0x06
     f02:	37 81       	ldd	r19, Z+7	; 0x07
     f04:	2f 5f       	subi	r18, 0xFF	; 255
     f06:	3f 4f       	sbci	r19, 0xFF	; 255
     f08:	37 83       	std	Z+7, r19	; 0x07
     f0a:	26 83       	std	Z+6, r18	; 0x06
     f0c:	14 c0       	rjmp	.+40     	; 0xf36 <fputc+0x6e>
     f0e:	8b 01       	movw	r16, r22
     f10:	ec 01       	movw	r28, r24
     f12:	fb 01       	movw	r30, r22
     f14:	00 84       	ldd	r0, Z+8	; 0x08
     f16:	f1 85       	ldd	r31, Z+9	; 0x09
     f18:	e0 2d       	mov	r30, r0
     f1a:	09 95       	icall
     f1c:	89 2b       	or	r24, r25
     f1e:	e1 f6       	brne	.-72     	; 0xed8 <fputc+0x10>
     f20:	d8 01       	movw	r26, r16
     f22:	16 96       	adiw	r26, 0x06	; 6
     f24:	8d 91       	ld	r24, X+
     f26:	9c 91       	ld	r25, X
     f28:	17 97       	sbiw	r26, 0x07	; 7
     f2a:	01 96       	adiw	r24, 0x01	; 1
     f2c:	17 96       	adiw	r26, 0x07	; 7
     f2e:	9c 93       	st	X, r25
     f30:	8e 93       	st	-X, r24
     f32:	16 97       	sbiw	r26, 0x06	; 6
     f34:	ce 01       	movw	r24, r28
     f36:	df 91       	pop	r29
     f38:	cf 91       	pop	r28
     f3a:	1f 91       	pop	r17
     f3c:	0f 91       	pop	r16
     f3e:	08 95       	ret

00000f40 <__ultoa_invert>:
     f40:	fa 01       	movw	r30, r20
     f42:	aa 27       	eor	r26, r26
     f44:	28 30       	cpi	r18, 0x08	; 8
     f46:	51 f1       	breq	.+84     	; 0xf9c <__ultoa_invert+0x5c>
     f48:	20 31       	cpi	r18, 0x10	; 16
     f4a:	81 f1       	breq	.+96     	; 0xfac <__ultoa_invert+0x6c>
     f4c:	e8 94       	clt
     f4e:	6f 93       	push	r22
     f50:	6e 7f       	andi	r22, 0xFE	; 254
     f52:	6e 5f       	subi	r22, 0xFE	; 254
     f54:	7f 4f       	sbci	r23, 0xFF	; 255
     f56:	8f 4f       	sbci	r24, 0xFF	; 255
     f58:	9f 4f       	sbci	r25, 0xFF	; 255
     f5a:	af 4f       	sbci	r26, 0xFF	; 255
     f5c:	b1 e0       	ldi	r27, 0x01	; 1
     f5e:	3e d0       	rcall	.+124    	; 0xfdc <__ultoa_invert+0x9c>
     f60:	b4 e0       	ldi	r27, 0x04	; 4
     f62:	3c d0       	rcall	.+120    	; 0xfdc <__ultoa_invert+0x9c>
     f64:	67 0f       	add	r22, r23
     f66:	78 1f       	adc	r23, r24
     f68:	89 1f       	adc	r24, r25
     f6a:	9a 1f       	adc	r25, r26
     f6c:	a1 1d       	adc	r26, r1
     f6e:	68 0f       	add	r22, r24
     f70:	79 1f       	adc	r23, r25
     f72:	8a 1f       	adc	r24, r26
     f74:	91 1d       	adc	r25, r1
     f76:	a1 1d       	adc	r26, r1
     f78:	6a 0f       	add	r22, r26
     f7a:	71 1d       	adc	r23, r1
     f7c:	81 1d       	adc	r24, r1
     f7e:	91 1d       	adc	r25, r1
     f80:	a1 1d       	adc	r26, r1
     f82:	20 d0       	rcall	.+64     	; 0xfc4 <__ultoa_invert+0x84>
     f84:	09 f4       	brne	.+2      	; 0xf88 <__ultoa_invert+0x48>
     f86:	68 94       	set
     f88:	3f 91       	pop	r19
     f8a:	2a e0       	ldi	r18, 0x0A	; 10
     f8c:	26 9f       	mul	r18, r22
     f8e:	11 24       	eor	r1, r1
     f90:	30 19       	sub	r19, r0
     f92:	30 5d       	subi	r19, 0xD0	; 208
     f94:	31 93       	st	Z+, r19
     f96:	de f6       	brtc	.-74     	; 0xf4e <__ultoa_invert+0xe>
     f98:	cf 01       	movw	r24, r30
     f9a:	08 95       	ret
     f9c:	46 2f       	mov	r20, r22
     f9e:	47 70       	andi	r20, 0x07	; 7
     fa0:	40 5d       	subi	r20, 0xD0	; 208
     fa2:	41 93       	st	Z+, r20
     fa4:	b3 e0       	ldi	r27, 0x03	; 3
     fa6:	0f d0       	rcall	.+30     	; 0xfc6 <__ultoa_invert+0x86>
     fa8:	c9 f7       	brne	.-14     	; 0xf9c <__ultoa_invert+0x5c>
     faa:	f6 cf       	rjmp	.-20     	; 0xf98 <__ultoa_invert+0x58>
     fac:	46 2f       	mov	r20, r22
     fae:	4f 70       	andi	r20, 0x0F	; 15
     fb0:	40 5d       	subi	r20, 0xD0	; 208
     fb2:	4a 33       	cpi	r20, 0x3A	; 58
     fb4:	18 f0       	brcs	.+6      	; 0xfbc <__ultoa_invert+0x7c>
     fb6:	49 5d       	subi	r20, 0xD9	; 217
     fb8:	31 fd       	sbrc	r19, 1
     fba:	40 52       	subi	r20, 0x20	; 32
     fbc:	41 93       	st	Z+, r20
     fbe:	02 d0       	rcall	.+4      	; 0xfc4 <__ultoa_invert+0x84>
     fc0:	a9 f7       	brne	.-22     	; 0xfac <__ultoa_invert+0x6c>
     fc2:	ea cf       	rjmp	.-44     	; 0xf98 <__ultoa_invert+0x58>
     fc4:	b4 e0       	ldi	r27, 0x04	; 4
     fc6:	a6 95       	lsr	r26
     fc8:	97 95       	ror	r25
     fca:	87 95       	ror	r24
     fcc:	77 95       	ror	r23
     fce:	67 95       	ror	r22
     fd0:	ba 95       	dec	r27
     fd2:	c9 f7       	brne	.-14     	; 0xfc6 <__ultoa_invert+0x86>
     fd4:	00 97       	sbiw	r24, 0x00	; 0
     fd6:	61 05       	cpc	r22, r1
     fd8:	71 05       	cpc	r23, r1
     fda:	08 95       	ret
     fdc:	9b 01       	movw	r18, r22
     fde:	ac 01       	movw	r20, r24
     fe0:	0a 2e       	mov	r0, r26
     fe2:	06 94       	lsr	r0
     fe4:	57 95       	ror	r21
     fe6:	47 95       	ror	r20
     fe8:	37 95       	ror	r19
     fea:	27 95       	ror	r18
     fec:	ba 95       	dec	r27
     fee:	c9 f7       	brne	.-14     	; 0xfe2 <__ultoa_invert+0xa2>
     ff0:	62 0f       	add	r22, r18
     ff2:	73 1f       	adc	r23, r19
     ff4:	84 1f       	adc	r24, r20
     ff6:	95 1f       	adc	r25, r21
     ff8:	a0 1d       	adc	r26, r0
     ffa:	08 95       	ret

00000ffc <__prologue_saves__>:
     ffc:	2f 92       	push	r2
     ffe:	3f 92       	push	r3
    1000:	4f 92       	push	r4
    1002:	5f 92       	push	r5
    1004:	6f 92       	push	r6
    1006:	7f 92       	push	r7
    1008:	8f 92       	push	r8
    100a:	9f 92       	push	r9
    100c:	af 92       	push	r10
    100e:	bf 92       	push	r11
    1010:	cf 92       	push	r12
    1012:	df 92       	push	r13
    1014:	ef 92       	push	r14
    1016:	ff 92       	push	r15
    1018:	0f 93       	push	r16
    101a:	1f 93       	push	r17
    101c:	cf 93       	push	r28
    101e:	df 93       	push	r29
    1020:	cd b7       	in	r28, 0x3d	; 61
    1022:	de b7       	in	r29, 0x3e	; 62
    1024:	ca 1b       	sub	r28, r26
    1026:	db 0b       	sbc	r29, r27
    1028:	0f b6       	in	r0, 0x3f	; 63
    102a:	f8 94       	cli
    102c:	de bf       	out	0x3e, r29	; 62
    102e:	0f be       	out	0x3f, r0	; 63
    1030:	cd bf       	out	0x3d, r28	; 61
    1032:	09 94       	ijmp

00001034 <__epilogue_restores__>:
    1034:	2a 88       	ldd	r2, Y+18	; 0x12
    1036:	39 88       	ldd	r3, Y+17	; 0x11
    1038:	48 88       	ldd	r4, Y+16	; 0x10
    103a:	5f 84       	ldd	r5, Y+15	; 0x0f
    103c:	6e 84       	ldd	r6, Y+14	; 0x0e
    103e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1040:	8c 84       	ldd	r8, Y+12	; 0x0c
    1042:	9b 84       	ldd	r9, Y+11	; 0x0b
    1044:	aa 84       	ldd	r10, Y+10	; 0x0a
    1046:	b9 84       	ldd	r11, Y+9	; 0x09
    1048:	c8 84       	ldd	r12, Y+8	; 0x08
    104a:	df 80       	ldd	r13, Y+7	; 0x07
    104c:	ee 80       	ldd	r14, Y+6	; 0x06
    104e:	fd 80       	ldd	r15, Y+5	; 0x05
    1050:	0c 81       	ldd	r16, Y+4	; 0x04
    1052:	1b 81       	ldd	r17, Y+3	; 0x03
    1054:	aa 81       	ldd	r26, Y+2	; 0x02
    1056:	b9 81       	ldd	r27, Y+1	; 0x01
    1058:	ce 0f       	add	r28, r30
    105a:	d1 1d       	adc	r29, r1
    105c:	0f b6       	in	r0, 0x3f	; 63
    105e:	f8 94       	cli
    1060:	de bf       	out	0x3e, r29	; 62
    1062:	0f be       	out	0x3f, r0	; 63
    1064:	cd bf       	out	0x3d, r28	; 61
    1066:	ed 01       	movw	r28, r26
    1068:	08 95       	ret

0000106a <_exit>:
    106a:	f8 94       	cli

0000106c <__stop_program>:
    106c:	ff cf       	rjmp	.-2      	; 0x106c <__stop_program>
